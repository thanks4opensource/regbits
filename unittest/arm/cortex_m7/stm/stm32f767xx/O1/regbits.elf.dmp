
O1/regbits.elf:     file format elf32-littlearm


Disassembly of section .text:

20020000 <INTERRUPT_VECTORS>:
20020000:	00 c0 07 20 4d 17 02 20 59 16 02 20 5b 16 02 20     ... M.. Y.. [.. 
20020010:	5d 16 02 20 5f 16 02 20 61 16 02 20 63 16 02 20     ].. _.. a.. c.. 
20020020:	65 16 02 20 67 16 02 20 69 16 02 20 6b 16 02 20     e.. g.. i.. k.. 
20020030:	6d 16 02 20 6f 16 02 20 71 16 02 20 73 16 02 20     m.. o.. q.. s.. 
20020040:	75 16 02 20 77 16 02 20 79 16 02 20 7b 16 02 20     u.. w.. y.. {.. 
20020050:	7d 16 02 20 7f 16 02 20 81 16 02 20 83 16 02 20     }.. ... ... ... 
20020060:	85 16 02 20 87 16 02 20 89 16 02 20 8b 16 02 20     ... ... ... ... 
20020070:	8d 16 02 20 8f 16 02 20 91 16 02 20 93 16 02 20     ... ... ... ... 
20020080:	95 16 02 20 97 16 02 20 99 16 02 20 9b 16 02 20     ... ... ... ... 
20020090:	9d 16 02 20 9f 16 02 20 a1 16 02 20 a3 16 02 20     ... ... ... ... 
200200a0:	a5 16 02 20 a7 16 02 20 a9 16 02 20 ab 16 02 20     ... ... ... ... 
200200b0:	ad 16 02 20 af 16 02 20 b1 16 02 20 b3 16 02 20     ... ... ... ... 
200200c0:	b5 16 02 20 b7 16 02 20 b9 16 02 20 bb 16 02 20     ... ... ... ... 
200200d0:	bd 16 02 20 bf 16 02 20 c1 16 02 20 c3 16 02 20     ... ... ... ... 
200200e0:	c5 16 02 20 c7 16 02 20 c9 16 02 20 cb 16 02 20     ... ... ... ... 
200200f0:	cd 16 02 20 cf 16 02 20 d1 16 02 20 d3 16 02 20     ... ... ... ... 
20020100:	d5 16 02 20 d7 16 02 20 d9 16 02 20 db 16 02 20     ... ... ... ... 
20020110:	dd 16 02 20 df 16 02 20 e1 16 02 20 e3 16 02 20     ... ... ... ... 
20020120:	e5 16 02 20 e7 16 02 20 e9 16 02 20 eb 16 02 20     ... ... ... ... 
20020130:	ed 16 02 20 ef 16 02 20 f1 16 02 20 f3 16 02 20     ... ... ... ... 
20020140:	f5 16 02 20 f7 16 02 20 f9 16 02 20 fb 16 02 20     ... ... ... ... 
20020150:	fd 16 02 20 ff 16 02 20 01 17 02 20 03 17 02 20     ... ... ... ... 
20020160:	05 17 02 20 07 17 02 20 09 17 02 20 0b 17 02 20     ... ... ... ... 
20020170:	0d 17 02 20 0f 17 02 20 11 17 02 20 13 17 02 20     ... ... ... ... 
20020180:	15 17 02 20 17 17 02 20 19 17 02 20 1b 17 02 20     ... ... ... ... 
20020190:	1d 17 02 20 1f 17 02 20 21 17 02 20 23 17 02 20     ... ... !.. #.. 
200201a0:	25 17 02 20 27 17 02 20 29 17 02 20 2b 17 02 20     %.. '.. ).. +.. 
200201b0:	2d 17 02 20 2f 17 02 20 31 17 02 20 33 17 02 20     -.. /.. 1.. 3.. 
200201c0:	35 17 02 20 37 17 02 20 39 17 02 20 3b 17 02 20     5.. 7.. 9.. ;.. 
200201d0:	3d 17 02 20 3f 17 02 20 41 17 02 20 43 17 02 20     =.. ?.. A.. C.. 
200201e0:	45 17 02 20 47 17 02 20 49 17 02 20 4b 17 02 20     E.. G.. I.. K.. 

200201f0 <zero_reg()>:
200201f0:	4b01      	ldr	r3, [pc, #4]	; (200201f8 <zero_reg()+0x8>)
200201f2:	2200      	movs	r2, #0
200201f4:	605a      	str	r2, [r3, #4]
200201f6:	4770      	bx	lr
200201f8:	200226c0 	.word	0x200226c0

200201fc <zero_array()>:
200201fc:	4b01      	ldr	r3, [pc, #4]	; (20020204 <zero_array()+0x8>)
200201fe:	2200      	movs	r2, #0
20020200:	62da      	str	r2, [r3, #44]	; 0x2c
20020202:	4770      	bx	lr
20020204:	20022500 	.word	0x20022500

20020208 <set_singl_bits_operator()>:
20020208:	4a02      	ldr	r2, [pc, #8]	; (20020214 <set_singl_bits_operator()+0xc>)
2002020a:	6853      	ldr	r3, [r2, #4]
2002020c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020210:	6053      	str	r3, [r2, #4]
20020212:	4770      	bx	lr
20020214:	200226c0 	.word	0x200226c0

20020218 <set_singl_bits_method()>:
20020218:	4a02      	ldr	r2, [pc, #8]	; (20020224 <set_singl_bits_method()+0xc>)
2002021a:	6853      	ldr	r3, [r2, #4]
2002021c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020220:	6053      	str	r3, [r2, #4]
20020222:	4770      	bx	lr
20020224:	200226c0 	.word	0x200226c0

20020228 <clr_singl_bits_operator()>:
20020228:	4a02      	ldr	r2, [pc, #8]	; (20020234 <clr_singl_bits_operator()+0xc>)
2002022a:	6853      	ldr	r3, [r2, #4]
2002022c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
20020230:	6053      	str	r3, [r2, #4]
20020232:	4770      	bx	lr
20020234:	200226c0 	.word	0x200226c0

20020238 <clr_singl_bits_method()>:
20020238:	4a02      	ldr	r2, [pc, #8]	; (20020244 <clr_singl_bits_method()+0xc>)
2002023a:	6853      	ldr	r3, [r2, #4]
2002023c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
20020240:	6053      	str	r3, [r2, #4]
20020242:	4770      	bx	lr
20020244:	200226c0 	.word	0x200226c0

20020248 <set_singl_mskd_operator()>:
20020248:	4a02      	ldr	r2, [pc, #8]	; (20020254 <set_singl_mskd_operator()+0xc>)
2002024a:	6853      	ldr	r3, [r2, #4]
2002024c:	f043 0302 	orr.w	r3, r3, #2
20020250:	6053      	str	r3, [r2, #4]
20020252:	4770      	bx	lr
20020254:	200226c0 	.word	0x200226c0

20020258 <set_singl_mskd_method()>:
20020258:	4a02      	ldr	r2, [pc, #8]	; (20020264 <set_singl_mskd_method()+0xc>)
2002025a:	6853      	ldr	r3, [r2, #4]
2002025c:	f043 0302 	orr.w	r3, r3, #2
20020260:	6053      	str	r3, [r2, #4]
20020262:	4770      	bx	lr
20020264:	200226c0 	.word	0x200226c0

20020268 <clr_singl_mskd_operator()>:
20020268:	4a02      	ldr	r2, [pc, #8]	; (20020274 <clr_singl_mskd_operator()+0xc>)
2002026a:	6853      	ldr	r3, [r2, #4]
2002026c:	f023 0302 	bic.w	r3, r3, #2
20020270:	6053      	str	r3, [r2, #4]
20020272:	4770      	bx	lr
20020274:	200226c0 	.word	0x200226c0

20020278 <clr_singl_mskd_method()>:
20020278:	4a02      	ldr	r2, [pc, #8]	; (20020284 <clr_singl_mskd_method()+0xc>)
2002027a:	6853      	ldr	r3, [r2, #4]
2002027c:	f023 0302 	bic.w	r3, r3, #2
20020280:	6053      	str	r3, [r2, #4]
20020282:	4770      	bx	lr
20020284:	200226c0 	.word	0x200226c0

20020288 <equ_singl_bits_operator()>:
20020288:	4b01      	ldr	r3, [pc, #4]	; (20020290 <equ_singl_bits_operator()+0x8>)
2002028a:	2240      	movs	r2, #64	; 0x40
2002028c:	605a      	str	r2, [r3, #4]
2002028e:	4770      	bx	lr
20020290:	200226c0 	.word	0x200226c0

20020294 <equ_singl_bits_method()>:
20020294:	4b01      	ldr	r3, [pc, #4]	; (2002029c <equ_singl_bits_method()+0x8>)
20020296:	2240      	movs	r2, #64	; 0x40
20020298:	605a      	str	r2, [r3, #4]
2002029a:	4770      	bx	lr
2002029c:	200226c0 	.word	0x200226c0

200202a0 <equ_singl_mskd_operator()>:
200202a0:	4b01      	ldr	r3, [pc, #4]	; (200202a8 <equ_singl_mskd_operator()+0x8>)
200202a2:	2202      	movs	r2, #2
200202a4:	605a      	str	r2, [r3, #4]
200202a6:	4770      	bx	lr
200202a8:	200226c0 	.word	0x200226c0

200202ac <equ_singl_mskd_method()>:
200202ac:	4b01      	ldr	r3, [pc, #4]	; (200202b4 <equ_singl_mskd_method()+0x8>)
200202ae:	2202      	movs	r2, #2
200202b0:	605a      	str	r2, [r3, #4]
200202b2:	4770      	bx	lr
200202b4:	200226c0 	.word	0x200226c0

200202b8 <flp_singl_bits_operator()>:
200202b8:	4a02      	ldr	r2, [pc, #8]	; (200202c4 <flp_singl_bits_operator()+0xc>)
200202ba:	6853      	ldr	r3, [r2, #4]
200202bc:	f083 0340 	eor.w	r3, r3, #64	; 0x40
200202c0:	6053      	str	r3, [r2, #4]
200202c2:	4770      	bx	lr
200202c4:	200226c0 	.word	0x200226c0

200202c8 <flp_singl_bits_method()>:
200202c8:	4a02      	ldr	r2, [pc, #8]	; (200202d4 <flp_singl_bits_method()+0xc>)
200202ca:	6853      	ldr	r3, [r2, #4]
200202cc:	f083 0340 	eor.w	r3, r3, #64	; 0x40
200202d0:	6053      	str	r3, [r2, #4]
200202d2:	4770      	bx	lr
200202d4:	200226c0 	.word	0x200226c0

200202d8 <flp_singl_mskd_operator()>:
200202d8:	4a02      	ldr	r2, [pc, #8]	; (200202e4 <flp_singl_mskd_operator()+0xc>)
200202da:	6853      	ldr	r3, [r2, #4]
200202dc:	f083 0302 	eor.w	r3, r3, #2
200202e0:	6053      	str	r3, [r2, #4]
200202e2:	4770      	bx	lr
200202e4:	200226c0 	.word	0x200226c0

200202e8 <flp_singl_mskd_method()>:
200202e8:	4a02      	ldr	r2, [pc, #8]	; (200202f4 <flp_singl_mskd_method()+0xc>)
200202ea:	6853      	ldr	r3, [r2, #4]
200202ec:	f083 0302 	eor.w	r3, r3, #2
200202f0:	6053      	str	r3, [r2, #4]
200202f2:	4770      	bx	lr
200202f4:	200226c0 	.word	0x200226c0

200202f8 <ins_singl_mskd_operator()>:
200202f8:	4a03      	ldr	r2, [pc, #12]	; (20020308 <ins_singl_mskd_operator()+0x10>)
200202fa:	6853      	ldr	r3, [r2, #4]
200202fc:	f023 0306 	bic.w	r3, r3, #6
20020300:	f043 0304 	orr.w	r3, r3, #4
20020304:	6053      	str	r3, [r2, #4]
20020306:	4770      	bx	lr
20020308:	200226c0 	.word	0x200226c0

2002030c <ins_singl_mskd_method()>:
2002030c:	4a03      	ldr	r2, [pc, #12]	; (2002031c <ins_singl_mskd_method()+0x10>)
2002030e:	6853      	ldr	r3, [r2, #4]
20020310:	f023 0306 	bic.w	r3, r3, #6
20020314:	f043 0304 	orr.w	r3, r3, #4
20020318:	6053      	str	r3, [r2, #4]
2002031a:	4770      	bx	lr
2002031c:	200226c0 	.word	0x200226c0

20020320 <set_multi_bits_operator()>:
20020320:	4a02      	ldr	r2, [pc, #8]	; (2002032c <set_multi_bits_operator()+0xc>)
20020322:	6853      	ldr	r3, [r2, #4]
20020324:	f043 0321 	orr.w	r3, r3, #33	; 0x21
20020328:	6053      	str	r3, [r2, #4]
2002032a:	4770      	bx	lr
2002032c:	200226c0 	.word	0x200226c0

20020330 <set_multi_bits_method()>:
20020330:	4a02      	ldr	r2, [pc, #8]	; (2002033c <set_multi_bits_method()+0xc>)
20020332:	6853      	ldr	r3, [r2, #4]
20020334:	f043 0321 	orr.w	r3, r3, #33	; 0x21
20020338:	6053      	str	r3, [r2, #4]
2002033a:	4770      	bx	lr
2002033c:	200226c0 	.word	0x200226c0

20020340 <ins_multi_mskd_operator()>:
20020340:	4a03      	ldr	r2, [pc, #12]	; (20020350 <ins_multi_mskd_operator()+0x10>)
20020342:	6851      	ldr	r1, [r2, #4]
20020344:	4b03      	ldr	r3, [pc, #12]	; (20020354 <ins_multi_mskd_operator()+0x14>)
20020346:	400b      	ands	r3, r1
20020348:	f443 73c1 	orr.w	r3, r3, #386	; 0x182
2002034c:	6053      	str	r3, [r2, #4]
2002034e:	4770      	bx	lr
20020350:	200226c0 	.word	0x200226c0
20020354:	fffff079 	.word	0xfffff079

20020358 <ins_multi_mskd_method()>:
20020358:	4a03      	ldr	r2, [pc, #12]	; (20020368 <ins_multi_mskd_method()+0x10>)
2002035a:	6851      	ldr	r1, [r2, #4]
2002035c:	4b03      	ldr	r3, [pc, #12]	; (2002036c <ins_multi_mskd_method()+0x14>)
2002035e:	400b      	ands	r3, r1
20020360:	f443 73c1 	orr.w	r3, r3, #386	; 0x182
20020364:	6053      	str	r3, [r2, #4]
20020366:	4770      	bx	lr
20020368:	200226c0 	.word	0x200226c0
2002036c:	fffff079 	.word	0xfffff079

20020370 <equ_multi_bits_operator()>:
20020370:	4b01      	ldr	r3, [pc, #4]	; (20020378 <equ_multi_bits_operator()+0x8>)
20020372:	2260      	movs	r2, #96	; 0x60
20020374:	605a      	str	r2, [r3, #4]
20020376:	4770      	bx	lr
20020378:	200226c0 	.word	0x200226c0

2002037c <equ_multi_bits_method()>:
2002037c:	4b01      	ldr	r3, [pc, #4]	; (20020384 <equ_multi_bits_method()+0x8>)
2002037e:	2260      	movs	r2, #96	; 0x60
20020380:	605a      	str	r2, [r3, #4]
20020382:	4770      	bx	lr
20020384:	200226c0 	.word	0x200226c0

20020388 <equ_multi_mskd_operator()>:
20020388:	4b02      	ldr	r3, [pc, #8]	; (20020394 <equ_multi_mskd_operator()+0xc>)
2002038a:	f44f 7242 	mov.w	r2, #776	; 0x308
2002038e:	605a      	str	r2, [r3, #4]
20020390:	4770      	bx	lr
20020392:	bf00      	nop
20020394:	200226c0 	.word	0x200226c0

20020398 <equ_multi_mskd_method()>:
20020398:	4b02      	ldr	r3, [pc, #8]	; (200203a4 <equ_multi_mskd_method()+0xc>)
2002039a:	f44f 7242 	mov.w	r2, #776	; 0x308
2002039e:	605a      	str	r2, [r3, #4]
200203a0:	4770      	bx	lr
200203a2:	bf00      	nop
200203a4:	200226c0 	.word	0x200226c0

200203a8 <equ_bits_mskd_operator()>:
200203a8:	4b01      	ldr	r3, [pc, #4]	; (200203b0 <equ_bits_mskd_operator()+0x8>)
200203aa:	2222      	movs	r2, #34	; 0x22
200203ac:	605a      	str	r2, [r3, #4]
200203ae:	4770      	bx	lr
200203b0:	200226c0 	.word	0x200226c0

200203b4 <equ_bits_mskd_method()>:
200203b4:	4b01      	ldr	r3, [pc, #4]	; (200203bc <equ_bits_mskd_method()+0x8>)
200203b6:	2222      	movs	r2, #34	; 0x22
200203b8:	605a      	str	r2, [r3, #4]
200203ba:	4770      	bx	lr
200203bc:	200226c0 	.word	0x200226c0

200203c0 <equ_mskd_bits_operator()>:
200203c0:	4b01      	ldr	r3, [pc, #4]	; (200203c8 <equ_mskd_bits_operator()+0x8>)
200203c2:	2244      	movs	r2, #68	; 0x44
200203c4:	605a      	str	r2, [r3, #4]
200203c6:	4770      	bx	lr
200203c8:	200226c0 	.word	0x200226c0

200203cc <equ_mskd_bits_method()>:
200203cc:	4b01      	ldr	r3, [pc, #4]	; (200203d4 <equ_mskd_bits_method()+0x8>)
200203ce:	2244      	movs	r2, #68	; 0x44
200203d0:	605a      	str	r2, [r3, #4]
200203d2:	4770      	bx	lr
200203d4:	200226c0 	.word	0x200226c0

200203d8 <equ_bits_var()>:
200203d8:	4b02      	ldr	r3, [pc, #8]	; (200203e4 <equ_bits_var()+0xc>)
200203da:	2240      	movs	r2, #64	; 0x40
200203dc:	605a      	str	r2, [r3, #4]
200203de:	2201      	movs	r2, #1
200203e0:	605a      	str	r2, [r3, #4]
200203e2:	4770      	bx	lr
200203e4:	200226c0 	.word	0x200226c0

200203e8 <equ_mskd_var()>:
200203e8:	4b03      	ldr	r3, [pc, #12]	; (200203f8 <equ_mskd_var()+0x10>)
200203ea:	2202      	movs	r2, #2
200203ec:	605a      	str	r2, [r3, #4]
200203ee:	f44f 72c0 	mov.w	r2, #384	; 0x180
200203f2:	605a      	str	r2, [r3, #4]
200203f4:	4770      	bx	lr
200203f6:	bf00      	nop
200203f8:	200226c0 	.word	0x200226c0

200203fc <cmp_equ_zero()>:
200203fc:	4b07      	ldr	r3, [pc, #28]	; (2002041c <cmp_equ_zero()+0x20>)
200203fe:	2200      	movs	r2, #0
20020400:	605a      	str	r2, [r3, #4]
20020402:	685b      	ldr	r3, [r3, #4]
20020404:	b923      	cbnz	r3, 20020410 <cmp_equ_zero()+0x14>
20020406:	4b06      	ldr	r3, [pc, #24]	; (20020420 <cmp_equ_zero()+0x24>)
20020408:	f04f 5268 	mov.w	r2, #973078528	; 0x3a000000
2002040c:	605a      	str	r2, [r3, #4]
2002040e:	4770      	bx	lr
20020410:	4b03      	ldr	r3, [pc, #12]	; (20020420 <cmp_equ_zero()+0x24>)
20020412:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020416:	605a      	str	r2, [r3, #4]
20020418:	4770      	bx	lr
2002041a:	bf00      	nop
2002041c:	200226c0 	.word	0x200226c0
20020420:	20022620 	.word	0x20022620

20020424 <cmp_neq_zero()>:
20020424:	4b06      	ldr	r3, [pc, #24]	; (20020440 <cmp_neq_zero()+0x1c>)
20020426:	2200      	movs	r2, #0
20020428:	605a      	str	r2, [r3, #4]
2002042a:	685b      	ldr	r3, [r3, #4]
2002042c:	b11b      	cbz	r3, 20020436 <cmp_neq_zero()+0x12>
2002042e:	4b04      	ldr	r3, [pc, #16]	; (20020440 <cmp_neq_zero()+0x1c>)
20020430:	2204      	movs	r2, #4
20020432:	605a      	str	r2, [r3, #4]
20020434:	4770      	bx	lr
20020436:	4b02      	ldr	r3, [pc, #8]	; (20020440 <cmp_neq_zero()+0x1c>)
20020438:	2220      	movs	r2, #32
2002043a:	605a      	str	r2, [r3, #4]
2002043c:	4770      	bx	lr
2002043e:	bf00      	nop
20020440:	200226c0 	.word	0x200226c0

20020444 <cmp_equ_bits()>:
20020444:	4b06      	ldr	r3, [pc, #24]	; (20020460 <cmp_equ_bits()+0x1c>)
20020446:	2240      	movs	r2, #64	; 0x40
20020448:	605a      	str	r2, [r3, #4]
2002044a:	685b      	ldr	r3, [r3, #4]
2002044c:	f013 0f40 	tst.w	r3, #64	; 0x40
20020450:	4b04      	ldr	r3, [pc, #16]	; (20020464 <cmp_equ_bits()+0x20>)
20020452:	bf14      	ite	ne
20020454:	f04f 52b0 	movne.w	r2, #369098752	; 0x16000000
20020458:	f04f 52d0 	moveq.w	r2, #436207616	; 0x1a000000
2002045c:	605a      	str	r2, [r3, #4]
2002045e:	4770      	bx	lr
20020460:	200226c0 	.word	0x200226c0
20020464:	20022620 	.word	0x20022620

20020468 <cmp_neq_bits()>:
20020468:	4b05      	ldr	r3, [pc, #20]	; (20020480 <cmp_neq_bits()+0x18>)
2002046a:	2240      	movs	r2, #64	; 0x40
2002046c:	605a      	str	r2, [r3, #4]
2002046e:	685b      	ldr	r3, [r3, #4]
20020470:	f013 0f40 	tst.w	r3, #64	; 0x40
20020474:	4b02      	ldr	r3, [pc, #8]	; (20020480 <cmp_neq_bits()+0x18>)
20020476:	bf0c      	ite	eq
20020478:	2202      	moveq	r2, #2
2002047a:	2220      	movne	r2, #32
2002047c:	605a      	str	r2, [r3, #4]
2002047e:	4770      	bx	lr
20020480:	200226c0 	.word	0x200226c0

20020484 <cmp_equ_multi_bits()>:
20020484:	4b06      	ldr	r3, [pc, #24]	; (200204a0 <cmp_equ_multi_bits()+0x1c>)
20020486:	2260      	movs	r2, #96	; 0x60
20020488:	605a      	str	r2, [r3, #4]
2002048a:	685b      	ldr	r3, [r3, #4]
2002048c:	4013      	ands	r3, r2
2002048e:	4293      	cmp	r3, r2
20020490:	4b04      	ldr	r3, [pc, #16]	; (200204a4 <cmp_equ_multi_bits()+0x20>)
20020492:	bf0c      	ite	eq
20020494:	f04f 5208 	moveq.w	r2, #570425344	; 0x22000000
20020498:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
2002049c:	605a      	str	r2, [r3, #4]
2002049e:	4770      	bx	lr
200204a0:	200226c0 	.word	0x200226c0
200204a4:	20022620 	.word	0x20022620

200204a8 <cmp_neq_multi_bits()>:
200204a8:	4b06      	ldr	r3, [pc, #24]	; (200204c4 <cmp_neq_multi_bits()+0x1c>)
200204aa:	2260      	movs	r2, #96	; 0x60
200204ac:	605a      	str	r2, [r3, #4]
200204ae:	685b      	ldr	r3, [r3, #4]
200204b0:	4013      	ands	r3, r2
200204b2:	4293      	cmp	r3, r2
200204b4:	4b04      	ldr	r3, [pc, #16]	; (200204c8 <cmp_neq_multi_bits()+0x20>)
200204b6:	bf14      	ite	ne
200204b8:	f04f 5268 	movne.w	r2, #973078528	; 0x3a000000
200204bc:	f04f 5278 	moveq.w	r2, #1040187392	; 0x3e000000
200204c0:	605a      	str	r2, [r3, #4]
200204c2:	4770      	bx	lr
200204c4:	200226c0 	.word	0x200226c0
200204c8:	20022620 	.word	0x20022620

200204cc <cmp_equ_mskd()>:
200204cc:	4b09      	ldr	r3, [pc, #36]	; (200204f4 <cmp_equ_mskd()+0x28>)
200204ce:	f44f 32e8 	mov.w	r2, #118784	; 0x1d000
200204d2:	605a      	str	r2, [r3, #4]
200204d4:	685b      	ldr	r3, [r3, #4]
200204d6:	f403 33f8 	and.w	r3, r3, #126976	; 0x1f000
200204da:	f5b3 3f88 	cmp.w	r3, #69632	; 0x11000
200204de:	4a06      	ldr	r2, [pc, #24]	; (200204f8 <cmp_equ_mskd()+0x2c>)
200204e0:	6853      	ldr	r3, [r2, #4]
200204e2:	f023 5378 	bic.w	r3, r3, #1040187392	; 0x3e000000
200204e6:	bf0c      	ite	eq
200204e8:	f043 6360 	orreq.w	r3, r3, #234881024	; 0xe000000
200204ec:	f043 5308 	orrne.w	r3, r3, #570425344	; 0x22000000
200204f0:	6053      	str	r3, [r2, #4]
200204f2:	4770      	bx	lr
200204f4:	200226c0 	.word	0x200226c0
200204f8:	20022620 	.word	0x20022620

200204fc <cmp_neq_mskd()>:
200204fc:	4b0b      	ldr	r3, [pc, #44]	; (2002052c <cmp_neq_mskd()+0x30>)
200204fe:	f44f 32e8 	mov.w	r2, #118784	; 0x1d000
20020502:	605a      	str	r2, [r3, #4]
20020504:	685b      	ldr	r3, [r3, #4]
20020506:	f403 33f8 	and.w	r3, r3, #126976	; 0x1f000
2002050a:	f5b3 3f88 	cmp.w	r3, #69632	; 0x11000
2002050e:	d007      	beq.n	20020520 <cmp_neq_mskd()+0x24>
20020510:	4a06      	ldr	r2, [pc, #24]	; (2002052c <cmp_neq_mskd()+0x30>)
20020512:	6853      	ldr	r3, [r2, #4]
20020514:	f023 0306 	bic.w	r3, r3, #6
20020518:	f043 0304 	orr.w	r3, r3, #4
2002051c:	6053      	str	r3, [r2, #4]
2002051e:	4770      	bx	lr
20020520:	4a02      	ldr	r2, [pc, #8]	; (2002052c <cmp_neq_mskd()+0x30>)
20020522:	6853      	ldr	r3, [r2, #4]
20020524:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020528:	6053      	str	r3, [r2, #4]
2002052a:	4770      	bx	lr
2002052c:	200226c0 	.word	0x200226c0

20020530 <cmp_equ_reg()>:
20020530:	4b06      	ldr	r3, [pc, #24]	; (2002054c <cmp_equ_reg()+0x1c>)
20020532:	2222      	movs	r2, #34	; 0x22
20020534:	605a      	str	r2, [r3, #4]
20020536:	685b      	ldr	r3, [r3, #4]
20020538:	4293      	cmp	r3, r2
2002053a:	4b05      	ldr	r3, [pc, #20]	; (20020550 <cmp_equ_reg()+0x20>)
2002053c:	bf0c      	ite	eq
2002053e:	f04f 5228 	moveq.w	r2, #704643072	; 0x2a000000
20020542:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
20020546:	605a      	str	r2, [r3, #4]
20020548:	4770      	bx	lr
2002054a:	bf00      	nop
2002054c:	200226c0 	.word	0x200226c0
20020550:	20022620 	.word	0x20022620

20020554 <cmp_neq_reg()>:
20020554:	4b05      	ldr	r3, [pc, #20]	; (2002056c <cmp_neq_reg()+0x18>)
20020556:	2222      	movs	r2, #34	; 0x22
20020558:	605a      	str	r2, [r3, #4]
2002055a:	685b      	ldr	r3, [r3, #4]
2002055c:	4293      	cmp	r3, r2
2002055e:	4b03      	ldr	r3, [pc, #12]	; (2002056c <cmp_neq_reg()+0x18>)
20020560:	bf14      	ite	ne
20020562:	2202      	movne	r2, #2
20020564:	2220      	moveq	r2, #32
20020566:	605a      	str	r2, [r3, #4]
20020568:	4770      	bx	lr
2002056a:	bf00      	nop
2002056c:	200226c0 	.word	0x200226c0

20020570 <constexpr_bits_array()>:
20020570:	4b03      	ldr	r3, [pc, #12]	; (20020580 <constexpr_bits_array()+0x10>)
20020572:	2206      	movs	r2, #6
20020574:	62da      	str	r2, [r3, #44]	; 0x2c
20020576:	f44f 5200 	mov.w	r2, #8192	; 0x2000
2002057a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
2002057e:	4770      	bx	lr
20020580:	20022500 	.word	0x20022500

20020584 <runtime_bits_array()>:
20020584:	b081      	sub	sp, #4
20020586:	2303      	movs	r3, #3
20020588:	9300      	str	r3, [sp, #0]
2002058a:	9a00      	ldr	r2, [sp, #0]
2002058c:	0092      	lsls	r2, r2, #2
2002058e:	4b03      	ldr	r3, [pc, #12]	; (2002059c <runtime_bits_array()+0x18>)
20020590:	4413      	add	r3, r2
20020592:	2221      	movs	r2, #33	; 0x21
20020594:	621a      	str	r2, [r3, #32]
20020596:	b001      	add	sp, #4
20020598:	4770      	bx	lr
2002059a:	bf00      	nop
2002059c:	20022500 	.word	0x20022500

200205a0 <prescaler_low()>:
200205a0:	4b04      	ldr	r3, [pc, #16]	; (200205b4 <prescaler_low()+0x14>)
200205a2:	2277      	movs	r2, #119	; 0x77
200205a4:	605a      	str	r2, [r3, #4]
200205a6:	685b      	ldr	r3, [r3, #4]
200205a8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
200205ac:	4a02      	ldr	r2, [pc, #8]	; (200205b8 <prescaler_low()+0x18>)
200205ae:	62d3      	str	r3, [r2, #44]	; 0x2c
200205b0:	4770      	bx	lr
200205b2:	bf00      	nop
200205b4:	20022620 	.word	0x20022620
200205b8:	20022500 	.word	0x20022500

200205bc <prescaler_high()>:
200205bc:	4b04      	ldr	r3, [pc, #16]	; (200205d0 <prescaler_high()+0x14>)
200205be:	f04f 5268 	mov.w	r2, #973078528	; 0x3a000000
200205c2:	605a      	str	r2, [r3, #4]
200205c4:	685b      	ldr	r3, [r3, #4]
200205c6:	f3c3 6344 	ubfx	r3, r3, #25, #5
200205ca:	4a02      	ldr	r2, [pc, #8]	; (200205d4 <prescaler_high()+0x18>)
200205cc:	62d3      	str	r3, [r2, #44]	; 0x2c
200205ce:	4770      	bx	lr
200205d0:	20022620 	.word	0x20022620
200205d4:	20022500 	.word	0x20022500

200205d8 <reg_mskd_lss()>:
200205d8:	4b07      	ldr	r3, [pc, #28]	; (200205f8 <reg_mskd_lss()+0x20>)
200205da:	f04f 5258 	mov.w	r2, #905969664	; 0x36000000
200205de:	605a      	str	r2, [r3, #4]
200205e0:	685b      	ldr	r3, [r3, #4]
200205e2:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200205e6:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
200205ea:	4b04      	ldr	r3, [pc, #16]	; (200205fc <reg_mskd_lss()+0x24>)
200205ec:	bf34      	ite	cc
200205ee:	2202      	movcc	r2, #2
200205f0:	2204      	movcs	r2, #4
200205f2:	605a      	str	r2, [r3, #4]
200205f4:	4770      	bx	lr
200205f6:	bf00      	nop
200205f8:	20022620 	.word	0x20022620
200205fc:	200226c0 	.word	0x200226c0

20020600 <reg_mskd_leq()>:
20020600:	4b0b      	ldr	r3, [pc, #44]	; (20020630 <reg_mskd_leq()+0x30>)
20020602:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020606:	605a      	str	r2, [r3, #4]
20020608:	685b      	ldr	r3, [r3, #4]
2002060a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002060e:	4293      	cmp	r3, r2
20020610:	d80a      	bhi.n	20020628 <reg_mskd_leq()+0x28>
20020612:	4b07      	ldr	r3, [pc, #28]	; (20020630 <reg_mskd_leq()+0x30>)
20020614:	685b      	ldr	r3, [r3, #4]
20020616:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002061a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
2002061e:	d803      	bhi.n	20020628 <reg_mskd_leq()+0x28>
20020620:	4b04      	ldr	r3, [pc, #16]	; (20020634 <reg_mskd_leq()+0x34>)
20020622:	2202      	movs	r2, #2
20020624:	605a      	str	r2, [r3, #4]
20020626:	4770      	bx	lr
20020628:	4b02      	ldr	r3, [pc, #8]	; (20020634 <reg_mskd_leq()+0x34>)
2002062a:	2204      	movs	r2, #4
2002062c:	605a      	str	r2, [r3, #4]
2002062e:	4770      	bx	lr
20020630:	20022620 	.word	0x20022620
20020634:	200226c0 	.word	0x200226c0

20020638 <reg_mskd_gtr()>:
20020638:	4b07      	ldr	r3, [pc, #28]	; (20020658 <reg_mskd_gtr()+0x20>)
2002063a:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
2002063e:	605a      	str	r2, [r3, #4]
20020640:	685b      	ldr	r3, [r3, #4]
20020642:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
20020646:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
2002064a:	4b04      	ldr	r3, [pc, #16]	; (2002065c <reg_mskd_gtr()+0x24>)
2002064c:	bf8c      	ite	hi
2002064e:	2202      	movhi	r2, #2
20020650:	2204      	movls	r2, #4
20020652:	605a      	str	r2, [r3, #4]
20020654:	4770      	bx	lr
20020656:	bf00      	nop
20020658:	20022620 	.word	0x20022620
2002065c:	200226c0 	.word	0x200226c0

20020660 <reg_mskd_geq()>:
20020660:	4b0b      	ldr	r3, [pc, #44]	; (20020690 <reg_mskd_geq()+0x30>)
20020662:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020666:	605a      	str	r2, [r3, #4]
20020668:	685b      	ldr	r3, [r3, #4]
2002066a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002066e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
20020672:	d309      	bcc.n	20020688 <reg_mskd_geq()+0x28>
20020674:	4b06      	ldr	r3, [pc, #24]	; (20020690 <reg_mskd_geq()+0x30>)
20020676:	685b      	ldr	r3, [r3, #4]
20020678:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002067c:	4293      	cmp	r3, r2
2002067e:	d303      	bcc.n	20020688 <reg_mskd_geq()+0x28>
20020680:	4b04      	ldr	r3, [pc, #16]	; (20020694 <reg_mskd_geq()+0x34>)
20020682:	2202      	movs	r2, #2
20020684:	605a      	str	r2, [r3, #4]
20020686:	4770      	bx	lr
20020688:	4b02      	ldr	r3, [pc, #8]	; (20020694 <reg_mskd_geq()+0x34>)
2002068a:	2204      	movs	r2, #4
2002068c:	605a      	str	r2, [r3, #4]
2002068e:	4770      	bx	lr
20020690:	20022620 	.word	0x20022620
20020694:	200226c0 	.word	0x200226c0

20020698 <pos_cmp_eq()>:
20020698:	4b01      	ldr	r3, [pc, #4]	; (200206a0 <pos_cmp_eq()+0x8>)
2002069a:	2202      	movs	r2, #2
2002069c:	605a      	str	r2, [r3, #4]
2002069e:	4770      	bx	lr
200206a0:	200226c0 	.word	0x200226c0

200206a4 <pos_cmp_ne()>:
200206a4:	4b01      	ldr	r3, [pc, #4]	; (200206ac <pos_cmp_ne()+0x8>)
200206a6:	2202      	movs	r2, #2
200206a8:	605a      	str	r2, [r3, #4]
200206aa:	4770      	bx	lr
200206ac:	200226c0 	.word	0x200226c0

200206b0 <bits_extract_eq()>:
200206b0:	4b05      	ldr	r3, [pc, #20]	; (200206c8 <bits_extract_eq()+0x18>)
200206b2:	2240      	movs	r2, #64	; 0x40
200206b4:	605a      	str	r2, [r3, #4]
200206b6:	685b      	ldr	r3, [r3, #4]
200206b8:	4293      	cmp	r3, r2
200206ba:	4b03      	ldr	r3, [pc, #12]	; (200206c8 <bits_extract_eq()+0x18>)
200206bc:	bf0c      	ite	eq
200206be:	2202      	moveq	r2, #2
200206c0:	2204      	movne	r2, #4
200206c2:	605a      	str	r2, [r3, #4]
200206c4:	4770      	bx	lr
200206c6:	bf00      	nop
200206c8:	200226c0 	.word	0x200226c0

200206cc <mskd_extract_eq()>:
200206cc:	4b05      	ldr	r3, [pc, #20]	; (200206e4 <mskd_extract_eq()+0x18>)
200206ce:	2202      	movs	r2, #2
200206d0:	605a      	str	r2, [r3, #4]
200206d2:	685b      	ldr	r3, [r3, #4]
200206d4:	4293      	cmp	r3, r2
200206d6:	4b03      	ldr	r3, [pc, #12]	; (200206e4 <mskd_extract_eq()+0x18>)
200206d8:	bf0c      	ite	eq
200206da:	2220      	moveq	r2, #32
200206dc:	2240      	movne	r2, #64	; 0x40
200206de:	605a      	str	r2, [r3, #4]
200206e0:	4770      	bx	lr
200206e2:	bf00      	nop
200206e4:	200226c0 	.word	0x200226c0

200206e8 <mskd_extract_ne()>:
200206e8:	4b05      	ldr	r3, [pc, #20]	; (20020700 <mskd_extract_ne()+0x18>)
200206ea:	2204      	movs	r2, #4
200206ec:	605a      	str	r2, [r3, #4]
200206ee:	685b      	ldr	r3, [r3, #4]
200206f0:	4293      	cmp	r3, r2
200206f2:	4b03      	ldr	r3, [pc, #12]	; (20020700 <mskd_extract_ne()+0x18>)
200206f4:	bf0c      	ite	eq
200206f6:	2240      	moveq	r2, #64	; 0x40
200206f8:	2220      	movne	r2, #32
200206fa:	605a      	str	r2, [r3, #4]
200206fc:	4770      	bx	lr
200206fe:	bf00      	nop
20020700:	200226c0 	.word	0x200226c0

20020704 <mskd_extract_lss()>:
20020704:	4b06      	ldr	r3, [pc, #24]	; (20020720 <mskd_extract_lss()+0x1c>)
20020706:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
2002070a:	605a      	str	r2, [r3, #4]
2002070c:	685b      	ldr	r3, [r3, #4]
2002070e:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
20020712:	4b04      	ldr	r3, [pc, #16]	; (20020724 <mskd_extract_lss()+0x20>)
20020714:	bf34      	ite	cc
20020716:	2220      	movcc	r2, #32
20020718:	2240      	movcs	r2, #64	; 0x40
2002071a:	605a      	str	r2, [r3, #4]
2002071c:	4770      	bx	lr
2002071e:	bf00      	nop
20020720:	20022620 	.word	0x20022620
20020724:	200226c0 	.word	0x200226c0

20020728 <mskd_extract_leq()>:
20020728:	4b05      	ldr	r3, [pc, #20]	; (20020740 <mskd_extract_leq()+0x18>)
2002072a:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
2002072e:	605a      	str	r2, [r3, #4]
20020730:	685b      	ldr	r3, [r3, #4]
20020732:	4293      	cmp	r3, r2
20020734:	4b03      	ldr	r3, [pc, #12]	; (20020744 <mskd_extract_leq()+0x1c>)
20020736:	bf94      	ite	ls
20020738:	2220      	movls	r2, #32
2002073a:	2240      	movhi	r2, #64	; 0x40
2002073c:	605a      	str	r2, [r3, #4]
2002073e:	4770      	bx	lr
20020740:	20022620 	.word	0x20022620
20020744:	200226c0 	.word	0x200226c0

20020748 <mskd_extract_gtr()>:
20020748:	4b06      	ldr	r3, [pc, #24]	; (20020764 <mskd_extract_gtr()+0x1c>)
2002074a:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
2002074e:	605a      	str	r2, [r3, #4]
20020750:	685b      	ldr	r3, [r3, #4]
20020752:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
20020756:	4b04      	ldr	r3, [pc, #16]	; (20020768 <mskd_extract_gtr()+0x20>)
20020758:	bf8c      	ite	hi
2002075a:	2220      	movhi	r2, #32
2002075c:	2240      	movls	r2, #64	; 0x40
2002075e:	605a      	str	r2, [r3, #4]
20020760:	4770      	bx	lr
20020762:	bf00      	nop
20020764:	20022620 	.word	0x20022620
20020768:	200226c0 	.word	0x200226c0

2002076c <set_bits_global()>:
2002076c:	4a02      	ldr	r2, [pc, #8]	; (20020778 <set_bits_global()+0xc>)
2002076e:	6853      	ldr	r3, [r2, #4]
20020770:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020774:	6053      	str	r3, [r2, #4]
20020776:	4770      	bx	lr
20020778:	200226c0 	.word	0x200226c0

2002077c <ins_mskd_global()>:
2002077c:	4a03      	ldr	r2, [pc, #12]	; (2002078c <ins_mskd_global()+0x10>)
2002077e:	6853      	ldr	r3, [r2, #4]
20020780:	f023 0306 	bic.w	r3, r3, #6
20020784:	f043 0302 	orr.w	r3, r3, #2
20020788:	6053      	str	r3, [r2, #4]
2002078a:	4770      	bx	lr
2002078c:	200226c0 	.word	0x200226c0

20020790 <assign_array_global()>:
20020790:	4b01      	ldr	r3, [pc, #4]	; (20020798 <assign_array_global()+0x8>)
20020792:	22bd      	movs	r2, #189	; 0xbd
20020794:	601a      	str	r2, [r3, #0]
20020796:	4770      	bx	lr
20020798:	2002252c 	.word	0x2002252c

2002079c <shifted_global()>:
2002079c:	4b04      	ldr	r3, [pc, #16]	; (200207b0 <shifted_global()+0x14>)
2002079e:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
200207a2:	605a      	str	r2, [r3, #4]
200207a4:	685b      	ldr	r3, [r3, #4]
200207a6:	f3c3 6344 	ubfx	r3, r3, #25, #5
200207aa:	4a02      	ldr	r2, [pc, #8]	; (200207b4 <shifted_global()+0x18>)
200207ac:	62d3      	str	r3, [r2, #44]	; 0x2c
200207ae:	4770      	bx	lr
200207b0:	20022620 	.word	0x20022620
200207b4:	20022500 	.word	0x20022500

200207b8 <assign_register_global()>:
200207b8:	4b01      	ldr	r3, [pc, #4]	; (200207c0 <assign_register_global()+0x8>)
200207ba:	2204      	movs	r2, #4
200207bc:	605a      	str	r2, [r3, #4]
200207be:	4770      	bx	lr
200207c0:	200226c0 	.word	0x200226c0

200207c4 <copy_bits_equ()>:
200207c4:	4b05      	ldr	r3, [pc, #20]	; (200207dc <copy_bits_equ()+0x18>)
200207c6:	2240      	movs	r2, #64	; 0x40
200207c8:	605a      	str	r2, [r3, #4]
200207ca:	685b      	ldr	r3, [r3, #4]
200207cc:	f013 0f40 	tst.w	r3, #64	; 0x40
200207d0:	4b02      	ldr	r3, [pc, #8]	; (200207dc <copy_bits_equ()+0x18>)
200207d2:	bf14      	ite	ne
200207d4:	2202      	movne	r2, #2
200207d6:	2204      	moveq	r2, #4
200207d8:	605a      	str	r2, [r3, #4]
200207da:	4770      	bx	lr
200207dc:	200226c0 	.word	0x200226c0

200207e0 <copy_bits_neq()>:
200207e0:	4b05      	ldr	r3, [pc, #20]	; (200207f8 <copy_bits_neq()+0x18>)
200207e2:	2240      	movs	r2, #64	; 0x40
200207e4:	605a      	str	r2, [r3, #4]
200207e6:	685b      	ldr	r3, [r3, #4]
200207e8:	f013 0f40 	tst.w	r3, #64	; 0x40
200207ec:	4b02      	ldr	r3, [pc, #8]	; (200207f8 <copy_bits_neq()+0x18>)
200207ee:	bf0c      	ite	eq
200207f0:	2202      	moveq	r2, #2
200207f2:	2204      	movne	r2, #4
200207f4:	605a      	str	r2, [r3, #4]
200207f6:	4770      	bx	lr
200207f8:	200226c0 	.word	0x200226c0

200207fc <copy_mskd_equ()>:
200207fc:	4b06      	ldr	r3, [pc, #24]	; (20020818 <copy_mskd_equ()+0x1c>)
200207fe:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
20020802:	605a      	str	r2, [r3, #4]
20020804:	685b      	ldr	r3, [r3, #4]
20020806:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002080a:	4293      	cmp	r3, r2
2002080c:	4b03      	ldr	r3, [pc, #12]	; (2002081c <copy_mskd_equ()+0x20>)
2002080e:	bf0c      	ite	eq
20020810:	2202      	moveq	r2, #2
20020812:	2204      	movne	r2, #4
20020814:	605a      	str	r2, [r3, #4]
20020816:	4770      	bx	lr
20020818:	20022620 	.word	0x20022620
2002081c:	200226c0 	.word	0x200226c0

20020820 <copy_mskd_neq()>:
20020820:	4b06      	ldr	r3, [pc, #24]	; (2002083c <copy_mskd_neq()+0x1c>)
20020822:	f04f 52d0 	mov.w	r2, #436207616	; 0x1a000000
20020826:	605a      	str	r2, [r3, #4]
20020828:	685b      	ldr	r3, [r3, #4]
2002082a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002082e:	4293      	cmp	r3, r2
20020830:	4b03      	ldr	r3, [pc, #12]	; (20020840 <copy_mskd_neq()+0x20>)
20020832:	bf14      	ite	ne
20020834:	2202      	movne	r2, #2
20020836:	2204      	moveq	r2, #4
20020838:	605a      	str	r2, [r3, #4]
2002083a:	4770      	bx	lr
2002083c:	20022620 	.word	0x20022620
20020840:	200226c0 	.word	0x200226c0

20020844 <copy_mskd_lss()>:
20020844:	4b07      	ldr	r3, [pc, #28]	; (20020864 <copy_mskd_lss()+0x20>)
20020846:	f04f 5258 	mov.w	r2, #905969664	; 0x36000000
2002084a:	605a      	str	r2, [r3, #4]
2002084c:	685b      	ldr	r3, [r3, #4]
2002084e:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
20020852:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
20020856:	4b04      	ldr	r3, [pc, #16]	; (20020868 <copy_mskd_lss()+0x24>)
20020858:	bf34      	ite	cc
2002085a:	2202      	movcc	r2, #2
2002085c:	2204      	movcs	r2, #4
2002085e:	605a      	str	r2, [r3, #4]
20020860:	4770      	bx	lr
20020862:	bf00      	nop
20020864:	20022620 	.word	0x20022620
20020868:	200226c0 	.word	0x200226c0

2002086c <copy_mskd_leq()>:
2002086c:	4b06      	ldr	r3, [pc, #24]	; (20020888 <copy_mskd_leq()+0x1c>)
2002086e:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020872:	605a      	str	r2, [r3, #4]
20020874:	685b      	ldr	r3, [r3, #4]
20020876:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002087a:	4293      	cmp	r3, r2
2002087c:	4b03      	ldr	r3, [pc, #12]	; (2002088c <copy_mskd_leq()+0x20>)
2002087e:	bf94      	ite	ls
20020880:	2202      	movls	r2, #2
20020882:	2204      	movhi	r2, #4
20020884:	605a      	str	r2, [r3, #4]
20020886:	4770      	bx	lr
20020888:	20022620 	.word	0x20022620
2002088c:	200226c0 	.word	0x200226c0

20020890 <copy_mskd_gtr()>:
20020890:	4b07      	ldr	r3, [pc, #28]	; (200208b0 <copy_mskd_gtr()+0x20>)
20020892:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
20020896:	605a      	str	r2, [r3, #4]
20020898:	685b      	ldr	r3, [r3, #4]
2002089a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002089e:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
200208a2:	4b04      	ldr	r3, [pc, #16]	; (200208b4 <copy_mskd_gtr()+0x24>)
200208a4:	bf8c      	ite	hi
200208a6:	2202      	movhi	r2, #2
200208a8:	2204      	movls	r2, #4
200208aa:	605a      	str	r2, [r3, #4]
200208ac:	4770      	bx	lr
200208ae:	bf00      	nop
200208b0:	20022620 	.word	0x20022620
200208b4:	200226c0 	.word	0x200226c0

200208b8 <copy_mskd_geq()>:
200208b8:	4b06      	ldr	r3, [pc, #24]	; (200208d4 <copy_mskd_geq()+0x1c>)
200208ba:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
200208be:	605a      	str	r2, [r3, #4]
200208c0:	685b      	ldr	r3, [r3, #4]
200208c2:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200208c6:	4293      	cmp	r3, r2
200208c8:	4b03      	ldr	r3, [pc, #12]	; (200208d8 <copy_mskd_geq()+0x20>)
200208ca:	bf2c      	ite	cs
200208cc:	2202      	movcs	r2, #2
200208ce:	2204      	movcc	r2, #4
200208d0:	605a      	str	r2, [r3, #4]
200208d2:	4770      	bx	lr
200208d4:	20022620 	.word	0x20022620
200208d8:	200226c0 	.word	0x200226c0

200208dc <copy_shifted()>:
200208dc:	4b06      	ldr	r3, [pc, #24]	; (200208f8 <copy_shifted()+0x1c>)
200208de:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
200208e2:	605a      	str	r2, [r3, #4]
200208e4:	685b      	ldr	r3, [r3, #4]
200208e6:	f3c3 6344 	ubfx	r3, r3, #25, #5
200208ea:	2b0b      	cmp	r3, #11
200208ec:	4b03      	ldr	r3, [pc, #12]	; (200208fc <copy_shifted()+0x20>)
200208ee:	bf0c      	ite	eq
200208f0:	2202      	moveq	r2, #2
200208f2:	2204      	movne	r2, #4
200208f4:	605a      	str	r2, [r3, #4]
200208f6:	4770      	bx	lr
200208f8:	20022620 	.word	0x20022620
200208fc:	200226c0 	.word	0x200226c0

20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020900:	4b01      	ldr	r3, [pc, #4]	; (20020908 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)+0x8>)
20020902:	6058      	str	r0, [r3, #4]
20020904:	4770      	bx	lr
20020906:	bf00      	nop
20020908:	200226c0 	.word	0x200226c0

2002090c <call_bits_val_var()>:
2002090c:	b500      	push	{lr}
2002090e:	2040      	movs	r0, #64	; 0x40
20020910:	f7ff fff6 	bl	20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020914:	f85d fb04 	ldr.w	pc, [sp], #4

20020918 <call_bits_val_zero()>:
20020918:	b500      	push	{lr}
2002091a:	2000      	movs	r0, #0
2002091c:	f7ff fff0 	bl	20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020920:	f85d fb04 	ldr.w	pc, [sp], #4

20020924 <call_bits_val_const()>:
20020924:	b500      	push	{lr}
20020926:	2040      	movs	r0, #64	; 0x40
20020928:	f7ff ffea 	bl	20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
2002092c:	f85d fb04 	ldr.w	pc, [sp], #4

20020930 <call_bits_val_global()>:
20020930:	b500      	push	{lr}
20020932:	2040      	movs	r0, #64	; 0x40
20020934:	f7ff ffe4 	bl	20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020938:	f85d fb04 	ldr.w	pc, [sp], #4

2002093c <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
2002093c:	6802      	ldr	r2, [r0, #0]
2002093e:	4b01      	ldr	r3, [pc, #4]	; (20020944 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0x8>)
20020940:	605a      	str	r2, [r3, #4]
20020942:	4770      	bx	lr
20020944:	200226c0 	.word	0x200226c0

20020948 <call_bits_ref_var()>:
20020948:	b500      	push	{lr}
2002094a:	b081      	sub	sp, #4
2002094c:	2301      	movs	r3, #1
2002094e:	9300      	str	r3, [sp, #0]
20020950:	4668      	mov	r0, sp
20020952:	f7ff fff3 	bl	2002093c <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020956:	b001      	add	sp, #4
20020958:	f85d fb04 	ldr.w	pc, [sp], #4

2002095c <call_bits_ref_zero()>:
2002095c:	b500      	push	{lr}
2002095e:	b081      	sub	sp, #4
20020960:	2300      	movs	r3, #0
20020962:	9300      	str	r3, [sp, #0]
20020964:	4668      	mov	r0, sp
20020966:	f7ff ffe9 	bl	2002093c <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
2002096a:	b001      	add	sp, #4
2002096c:	f85d fb04 	ldr.w	pc, [sp], #4

20020970 <call_bits_ref_const()>:
20020970:	b500      	push	{lr}
20020972:	b081      	sub	sp, #4
20020974:	2301      	movs	r3, #1
20020976:	9300      	str	r3, [sp, #0]
20020978:	4668      	mov	r0, sp
2002097a:	f7ff ffdf 	bl	2002093c <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
2002097e:	b001      	add	sp, #4
20020980:	f85d fb04 	ldr.w	pc, [sp], #4

20020984 <call_bits_ref_global()>:
20020984:	b500      	push	{lr}
20020986:	b081      	sub	sp, #4
20020988:	2340      	movs	r3, #64	; 0x40
2002098a:	9300      	str	r3, [sp, #0]
2002098c:	4668      	mov	r0, sp
2002098e:	f7ff ffd5 	bl	2002093c <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020992:	b001      	add	sp, #4
20020994:	f85d fb04 	ldr.w	pc, [sp], #4

20020998 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020998:	4a03      	ldr	r2, [pc, #12]	; (200209a8 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x10>)
2002099a:	6853      	ldr	r3, [r2, #4]
2002099c:	ea23 0000 	bic.w	r0, r3, r0
200209a0:	4308      	orrs	r0, r1
200209a2:	6050      	str	r0, [r2, #4]
200209a4:	4770      	bx	lr
200209a6:	bf00      	nop
200209a8:	200226c0 	.word	0x200226c0

200209ac <call_mskd_val_var()>:
200209ac:	b500      	push	{lr}
200209ae:	2006      	movs	r0, #6
200209b0:	2102      	movs	r1, #2
200209b2:	f7ff fff1 	bl	20020998 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
200209b6:	f85d fb04 	ldr.w	pc, [sp], #4

200209ba <call_mskd_val_const()>:
200209ba:	b500      	push	{lr}
200209bc:	2006      	movs	r0, #6
200209be:	2102      	movs	r1, #2
200209c0:	f7ff ffea 	bl	20020998 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
200209c4:	f85d fb04 	ldr.w	pc, [sp], #4

200209c8 <call_mskd_val_global()>:
200209c8:	b500      	push	{lr}
200209ca:	2006      	movs	r0, #6
200209cc:	2102      	movs	r1, #2
200209ce:	f7ff ffe3 	bl	20020998 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
200209d2:	f85d fb04 	ldr.w	pc, [sp], #4

200209d6 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
200209d6:	4a04      	ldr	r2, [pc, #16]	; (200209e8 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x12>)
200209d8:	6853      	ldr	r3, [r2, #4]
200209da:	6801      	ldr	r1, [r0, #0]
200209dc:	ea23 0301 	bic.w	r3, r3, r1
200209e0:	6841      	ldr	r1, [r0, #4]
200209e2:	430b      	orrs	r3, r1
200209e4:	6053      	str	r3, [r2, #4]
200209e6:	4770      	bx	lr
200209e8:	200226c0 	.word	0x200226c0

200209ec <call_mskd_ref_var()>:
200209ec:	b500      	push	{lr}
200209ee:	b082      	sub	sp, #8
200209f0:	4b04      	ldr	r3, [pc, #16]	; (20020a04 <call_mskd_ref_var()+0x18>)
200209f2:	cb0c      	ldmia	r3, {r2, r3}
200209f4:	e88d 000c 	stmia.w	sp, {r2, r3}
200209f8:	4668      	mov	r0, sp
200209fa:	f7ff ffec 	bl	200209d6 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
200209fe:	b002      	add	sp, #8
20020a00:	f85d fb04 	ldr.w	pc, [sp], #4
20020a04:	20021780 	.word	0x20021780

20020a08 <call_mskd_ref_const()>:
20020a08:	b500      	push	{lr}
20020a0a:	b082      	sub	sp, #8
20020a0c:	2306      	movs	r3, #6
20020a0e:	9300      	str	r3, [sp, #0]
20020a10:	2304      	movs	r3, #4
20020a12:	9301      	str	r3, [sp, #4]
20020a14:	4668      	mov	r0, sp
20020a16:	f7ff ffde 	bl	200209d6 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
20020a1a:	b002      	add	sp, #8
20020a1c:	f85d fb04 	ldr.w	pc, [sp], #4

20020a20 <call_mskd_ref_global()>:
20020a20:	b500      	push	{lr}
20020a22:	b082      	sub	sp, #8
20020a24:	2306      	movs	r3, #6
20020a26:	9300      	str	r3, [sp, #0]
20020a28:	2302      	movs	r3, #2
20020a2a:	9301      	str	r3, [sp, #4]
20020a2c:	4668      	mov	r0, sp
20020a2e:	f7ff ffd2 	bl	200209d6 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
20020a32:	b002      	add	sp, #8
20020a34:	f85d fb04 	ldr.w	pc, [sp], #4

20020a38 <periph_bits(mcu::Serial volatile*)>:
20020a38:	6843      	ldr	r3, [r0, #4]
20020a3a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020a3e:	6043      	str	r3, [r0, #4]
20020a40:	4770      	bx	lr

20020a42 <call_periph_bits()>:
20020a42:	b500      	push	{lr}
20020a44:	4802      	ldr	r0, [pc, #8]	; (20020a50 <call_periph_bits()+0xe>)
20020a46:	f7ff fff7 	bl	20020a38 <periph_bits(mcu::Serial volatile*)>
20020a4a:	f85d fb04 	ldr.w	pc, [sp], #4
20020a4e:	bf00      	nop
20020a50:	200226c0 	.word	0x200226c0

20020a54 <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020a54:	6843      	ldr	r3, [r0, #4]
20020a56:	4319      	orrs	r1, r3
20020a58:	6041      	str	r1, [r0, #4]
20020a5a:	4770      	bx	lr

20020a5c <call_periph_bits_val()>:
20020a5c:	b500      	push	{lr}
20020a5e:	2140      	movs	r1, #64	; 0x40
20020a60:	4802      	ldr	r0, [pc, #8]	; (20020a6c <call_periph_bits_val()+0x10>)
20020a62:	f7ff fff7 	bl	20020a54 <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020a66:	f85d fb04 	ldr.w	pc, [sp], #4
20020a6a:	bf00      	nop
20020a6c:	200226c0 	.word	0x200226c0

20020a70 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020a70:	6803      	ldr	r3, [r0, #0]
20020a72:	4319      	orrs	r1, r3
20020a74:	6001      	str	r1, [r0, #0]
20020a76:	4770      	bx	lr

20020a78 <call_reg_bits_val()>:
20020a78:	b500      	push	{lr}
20020a7a:	2140      	movs	r1, #64	; 0x40
20020a7c:	4802      	ldr	r0, [pc, #8]	; (20020a88 <call_reg_bits_val()+0x10>)
20020a7e:	f7ff fff7 	bl	20020a70 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020a82:	f85d fb04 	ldr.w	pc, [sp], #4
20020a86:	bf00      	nop
20020a88:	200226c4 	.word	0x200226c4

20020a8c <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
20020a8c:	6843      	ldr	r3, [r0, #4]
20020a8e:	680a      	ldr	r2, [r1, #0]
20020a90:	4313      	orrs	r3, r2
20020a92:	6043      	str	r3, [r0, #4]
20020a94:	4770      	bx	lr

20020a96 <call_periph_bits_ref()>:
20020a96:	b500      	push	{lr}
20020a98:	b081      	sub	sp, #4
20020a9a:	2340      	movs	r3, #64	; 0x40
20020a9c:	9300      	str	r3, [sp, #0]
20020a9e:	4669      	mov	r1, sp
20020aa0:	4802      	ldr	r0, [pc, #8]	; (20020aac <call_periph_bits_ref()+0x16>)
20020aa2:	f7ff fff3 	bl	20020a8c <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020aa6:	b001      	add	sp, #4
20020aa8:	f85d fb04 	ldr.w	pc, [sp], #4
20020aac:	200226c0 	.word	0x200226c0

20020ab0 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
20020ab0:	6803      	ldr	r3, [r0, #0]
20020ab2:	680a      	ldr	r2, [r1, #0]
20020ab4:	4313      	orrs	r3, r2
20020ab6:	6003      	str	r3, [r0, #0]
20020ab8:	4770      	bx	lr

20020aba <call_reg_bits_ref()>:
20020aba:	b500      	push	{lr}
20020abc:	b081      	sub	sp, #4
20020abe:	2340      	movs	r3, #64	; 0x40
20020ac0:	9300      	str	r3, [sp, #0]
20020ac2:	4669      	mov	r1, sp
20020ac4:	4802      	ldr	r0, [pc, #8]	; (20020ad0 <call_reg_bits_ref()+0x16>)
20020ac6:	f7ff fff3 	bl	20020ab0 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020aca:	b001      	add	sp, #4
20020acc:	f85d fb04 	ldr.w	pc, [sp], #4
20020ad0:	200226c4 	.word	0x200226c4

20020ad4 <periph_mskd(mcu::Serial volatile*)>:
20020ad4:	6843      	ldr	r3, [r0, #4]
20020ad6:	f023 0306 	bic.w	r3, r3, #6
20020ada:	f043 0302 	orr.w	r3, r3, #2
20020ade:	6043      	str	r3, [r0, #4]
20020ae0:	4770      	bx	lr

20020ae2 <call_periph_mskd()>:
20020ae2:	b500      	push	{lr}
20020ae4:	4802      	ldr	r0, [pc, #8]	; (20020af0 <call_periph_mskd()+0xe>)
20020ae6:	f7ff fff5 	bl	20020ad4 <periph_mskd(mcu::Serial volatile*)>
20020aea:	f85d fb04 	ldr.w	pc, [sp], #4
20020aee:	bf00      	nop
20020af0:	200226c0 	.word	0x200226c0

20020af4 <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020af4:	6843      	ldr	r3, [r0, #4]
20020af6:	ea23 0101 	bic.w	r1, r3, r1
20020afa:	4311      	orrs	r1, r2
20020afc:	6041      	str	r1, [r0, #4]
20020afe:	4770      	bx	lr

20020b00 <call_periph_mskd_val()>:
20020b00:	b500      	push	{lr}
20020b02:	2106      	movs	r1, #6
20020b04:	2202      	movs	r2, #2
20020b06:	4802      	ldr	r0, [pc, #8]	; (20020b10 <call_periph_mskd_val()+0x10>)
20020b08:	f7ff fff4 	bl	20020af4 <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b0c:	f85d fb04 	ldr.w	pc, [sp], #4
20020b10:	200226c0 	.word	0x200226c0

20020b14 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b14:	6803      	ldr	r3, [r0, #0]
20020b16:	ea23 0101 	bic.w	r1, r3, r1
20020b1a:	4311      	orrs	r1, r2
20020b1c:	6001      	str	r1, [r0, #0]
20020b1e:	4770      	bx	lr

20020b20 <call_reg_mskd_val()>:
20020b20:	b500      	push	{lr}
20020b22:	2106      	movs	r1, #6
20020b24:	2202      	movs	r2, #2
20020b26:	4802      	ldr	r0, [pc, #8]	; (20020b30 <call_reg_mskd_val()+0x10>)
20020b28:	f7ff fff4 	bl	20020b14 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b2c:	f85d fb04 	ldr.w	pc, [sp], #4
20020b30:	200226c4 	.word	0x200226c4

20020b34 <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b34:	6843      	ldr	r3, [r0, #4]
20020b36:	ea23 0101 	bic.w	r1, r3, r1
20020b3a:	4311      	orrs	r1, r2
20020b3c:	6041      	str	r1, [r0, #4]
20020b3e:	4770      	bx	lr

20020b40 <call_periph_mskd_ref()>:
20020b40:	b500      	push	{lr}
20020b42:	2106      	movs	r1, #6
20020b44:	2202      	movs	r2, #2
20020b46:	4802      	ldr	r0, [pc, #8]	; (20020b50 <call_periph_mskd_ref()+0x10>)
20020b48:	f7ff fff4 	bl	20020b34 <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b4c:	f85d fb04 	ldr.w	pc, [sp], #4
20020b50:	200226c0 	.word	0x200226c0

20020b54 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b54:	6803      	ldr	r3, [r0, #0]
20020b56:	ea23 0101 	bic.w	r1, r3, r1
20020b5a:	4311      	orrs	r1, r2
20020b5c:	6001      	str	r1, [r0, #0]
20020b5e:	4770      	bx	lr

20020b60 <call_reg_mskd_ref()>:
20020b60:	b500      	push	{lr}
20020b62:	2106      	movs	r1, #6
20020b64:	2202      	movs	r2, #2
20020b66:	4802      	ldr	r0, [pc, #8]	; (20020b70 <call_reg_mskd_ref()+0x10>)
20020b68:	f7ff fff4 	bl	20020b54 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b6c:	f85d fb04 	ldr.w	pc, [sp], #4
20020b70:	200226c4 	.word	0x200226c4

20020b74 <return_bits()>:
20020b74:	2020      	movs	r0, #32
20020b76:	4770      	bx	lr

20020b78 <call_return_bits()>:
20020b78:	b500      	push	{lr}
20020b7a:	f7ff fffb 	bl	20020b74 <return_bits()>
20020b7e:	2820      	cmp	r0, #32
20020b80:	4b04      	ldr	r3, [pc, #16]	; (20020b94 <call_return_bits()+0x1c>)
20020b82:	bf0c      	ite	eq
20020b84:	f04f 5228 	moveq.w	r2, #704643072	; 0x2a000000
20020b88:	f04f 62c0 	movne.w	r2, #100663296	; 0x6000000
20020b8c:	605a      	str	r2, [r3, #4]
20020b8e:	f85d fb04 	ldr.w	pc, [sp], #4
20020b92:	bf00      	nop
20020b94:	20022620 	.word	0x20022620

20020b98 <return_mskd()>:
20020b98:	2218      	movs	r2, #24
20020b9a:	6002      	str	r2, [r0, #0]
20020b9c:	2208      	movs	r2, #8
20020b9e:	6042      	str	r2, [r0, #4]
20020ba0:	4770      	bx	lr

20020ba2 <call_return_mskd()>:
20020ba2:	b500      	push	{lr}
20020ba4:	b082      	sub	sp, #8
20020ba6:	4668      	mov	r0, sp
20020ba8:	f7ff fff6 	bl	20020b98 <return_mskd()>
20020bac:	9a01      	ldr	r2, [sp, #4]
20020bae:	9b00      	ldr	r3, [sp, #0]
20020bb0:	2b18      	cmp	r3, #24
20020bb2:	d006      	beq.n	20020bc2 <call_return_mskd()+0x20>
20020bb4:	4b06      	ldr	r3, [pc, #24]	; (20020bd0 <call_return_mskd()+0x2e>)
20020bb6:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
20020bba:	605a      	str	r2, [r3, #4]
20020bbc:	b002      	add	sp, #8
20020bbe:	f85d fb04 	ldr.w	pc, [sp], #4
20020bc2:	2a08      	cmp	r2, #8
20020bc4:	d1f6      	bne.n	20020bb4 <call_return_mskd()+0x12>
20020bc6:	4b02      	ldr	r3, [pc, #8]	; (20020bd0 <call_return_mskd()+0x2e>)
20020bc8:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020bcc:	605a      	str	r2, [r3, #4]
20020bce:	e7f5      	b.n	20020bbc <call_return_mskd()+0x1a>
20020bd0:	20022620 	.word	0x20022620

20020bd4 <return_reg()>:
20020bd4:	4b02      	ldr	r3, [pc, #8]	; (20020be0 <return_reg()+0xc>)
20020bd6:	2240      	movs	r2, #64	; 0x40
20020bd8:	605a      	str	r2, [r3, #4]
20020bda:	4802      	ldr	r0, [pc, #8]	; (20020be4 <return_reg()+0x10>)
20020bdc:	4770      	bx	lr
20020bde:	bf00      	nop
20020be0:	200226c0 	.word	0x200226c0
20020be4:	200226c4 	.word	0x200226c4

20020be8 <call_return_reg()>:
20020be8:	b500      	push	{lr}
20020bea:	f7ff fff3 	bl	20020bd4 <return_reg()>
20020bee:	6803      	ldr	r3, [r0, #0]
20020bf0:	2b40      	cmp	r3, #64	; 0x40
20020bf2:	4b04      	ldr	r3, [pc, #16]	; (20020c04 <call_return_reg()+0x1c>)
20020bf4:	bf0c      	ite	eq
20020bf6:	f04f 52f0 	moveq.w	r2, #503316480	; 0x1e000000
20020bfa:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
20020bfe:	605a      	str	r2, [r3, #4]
20020c00:	f85d fb04 	ldr.w	pc, [sp], #4
20020c04:	20022620 	.word	0x20022620

20020c08 <return_periph()>:
20020c08:	4801      	ldr	r0, [pc, #4]	; (20020c10 <return_periph()+0x8>)
20020c0a:	2340      	movs	r3, #64	; 0x40
20020c0c:	6043      	str	r3, [r0, #4]
20020c0e:	4770      	bx	lr
20020c10:	200226c0 	.word	0x200226c0

20020c14 <call_return_periph()>:
20020c14:	b500      	push	{lr}
20020c16:	f7ff fff7 	bl	20020c08 <return_periph()>
20020c1a:	6843      	ldr	r3, [r0, #4]
20020c1c:	2b40      	cmp	r3, #64	; 0x40
20020c1e:	4b04      	ldr	r3, [pc, #16]	; (20020c30 <call_return_periph()+0x1c>)
20020c20:	bf0c      	ite	eq
20020c22:	f04f 5218 	moveq.w	r2, #637534208	; 0x26000000
20020c26:	f04f 5228 	movne.w	r2, #704643072	; 0x2a000000
20020c2a:	605a      	str	r2, [r3, #4]
20020c2c:	f85d fb04 	ldr.w	pc, [sp], #4
20020c30:	20022620 	.word	0x20022620

20020c34 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>:
20020c34:	2805      	cmp	r0, #5
20020c36:	d006      	beq.n	20020c46 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x12>
20020c38:	2806      	cmp	r0, #6
20020c3a:	4b05      	ldr	r3, [pc, #20]	; (20020c50 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x1c>)
20020c3c:	bf0c      	ite	eq
20020c3e:	2244      	moveq	r2, #68	; 0x44
20020c40:	2255      	movne	r2, #85	; 0x55
20020c42:	62da      	str	r2, [r3, #44]	; 0x2c
20020c44:	4770      	bx	lr
20020c46:	4b02      	ldr	r3, [pc, #8]	; (20020c50 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x1c>)
20020c48:	2233      	movs	r2, #51	; 0x33
20020c4a:	62da      	str	r2, [r3, #44]	; 0x2c
20020c4c:	4770      	bx	lr
20020c4e:	bf00      	nop
20020c50:	20022500 	.word	0x20022500

20020c54 <call_pos_val()>:
20020c54:	b500      	push	{lr}
20020c56:	2005      	movs	r0, #5
20020c58:	f7ff ffec 	bl	20020c34 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
20020c5c:	2006      	movs	r0, #6
20020c5e:	f7ff ffe9 	bl	20020c34 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
20020c62:	f85d fb04 	ldr.w	pc, [sp], #4

20020c66 <call_pos_val_global()>:
20020c66:	b500      	push	{lr}
20020c68:	2006      	movs	r0, #6
20020c6a:	f7ff ffe3 	bl	20020c34 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
20020c6e:	f85d fb04 	ldr.w	pc, [sp], #4

20020c72 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>:
20020c72:	6803      	ldr	r3, [r0, #0]
20020c74:	2b05      	cmp	r3, #5
20020c76:	d006      	beq.n	20020c86 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x14>
20020c78:	2b06      	cmp	r3, #6
20020c7a:	4b05      	ldr	r3, [pc, #20]	; (20020c90 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1e>)
20020c7c:	bf0c      	ite	eq
20020c7e:	2277      	moveq	r2, #119	; 0x77
20020c80:	2288      	movne	r2, #136	; 0x88
20020c82:	62da      	str	r2, [r3, #44]	; 0x2c
20020c84:	4770      	bx	lr
20020c86:	4b02      	ldr	r3, [pc, #8]	; (20020c90 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1e>)
20020c88:	2266      	movs	r2, #102	; 0x66
20020c8a:	62da      	str	r2, [r3, #44]	; 0x2c
20020c8c:	4770      	bx	lr
20020c8e:	bf00      	nop
20020c90:	20022500 	.word	0x20022500

20020c94 <call_pos_ref()>:
20020c94:	b510      	push	{r4, lr}
20020c96:	b082      	sub	sp, #8
20020c98:	2405      	movs	r4, #5
20020c9a:	9401      	str	r4, [sp, #4]
20020c9c:	a801      	add	r0, sp, #4
20020c9e:	f7ff ffe8 	bl	20020c72 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
20020ca2:	9400      	str	r4, [sp, #0]
20020ca4:	4668      	mov	r0, sp
20020ca6:	f7ff ffe4 	bl	20020c72 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
20020caa:	b002      	add	sp, #8
20020cac:	bd10      	pop	{r4, pc}

20020cae <call_pos_ref_global()>:
20020cae:	b500      	push	{lr}
20020cb0:	b081      	sub	sp, #4
20020cb2:	2306      	movs	r3, #6
20020cb4:	9300      	str	r3, [sp, #0]
20020cb6:	4668      	mov	r0, sp
20020cb8:	f7ff ffdb 	bl	20020c72 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
20020cbc:	b001      	add	sp, #4
20020cbe:	f85d fb04 	ldr.w	pc, [sp], #4

20020cc2 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020cc2:	4a03      	ldr	r2, [pc, #12]	; (20020cd0 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
20020cc4:	6853      	ldr	r3, [r2, #4]
20020cc6:	ea23 0000 	bic.w	r0, r3, r0
20020cca:	4308      	orrs	r0, r1
20020ccc:	6050      	str	r0, [r2, #4]
20020cce:	4770      	bx	lr
20020cd0:	200226c0 	.word	0x200226c0

20020cd4 <call_range_val(unsigned int)>:
20020cd4:	b500      	push	{lr}
20020cd6:	0301      	lsls	r1, r0, #12
20020cd8:	f44f 30f8 	mov.w	r0, #126976	; 0x1f000
20020cdc:	f7ff fff1 	bl	20020cc2 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020ce0:	f85d fb04 	ldr.w	pc, [sp], #4

20020ce4 <call_range_val_port()>:
20020ce4:	b500      	push	{lr}
20020ce6:	201f      	movs	r0, #31
20020ce8:	f7ff fff4 	bl	20020cd4 <call_range_val(unsigned int)>
20020cec:	f85d fb04 	ldr.w	pc, [sp], #4

20020cf0 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020cf0:	4a03      	ldr	r2, [pc, #12]	; (20020d00 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x10>)
20020cf2:	6853      	ldr	r3, [r2, #4]
20020cf4:	ea23 0000 	bic.w	r0, r3, r0
20020cf8:	4308      	orrs	r0, r1
20020cfa:	6050      	str	r0, [r2, #4]
20020cfc:	4770      	bx	lr
20020cfe:	bf00      	nop
20020d00:	200226c0 	.word	0x200226c0

20020d04 <call_range_ref(unsigned int)>:
20020d04:	b500      	push	{lr}
20020d06:	0301      	lsls	r1, r0, #12
20020d08:	f44f 30f8 	mov.w	r0, #126976	; 0x1f000
20020d0c:	f7ff fff0 	bl	20020cf0 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020d10:	f85d fb04 	ldr.w	pc, [sp], #4

20020d14 <call_range_ref_port()>:
20020d14:	b500      	push	{lr}
20020d16:	200c      	movs	r0, #12
20020d18:	f7ff fff4 	bl	20020d04 <call_range_ref(unsigned int)>
20020d1c:	f85d fb04 	ldr.w	pc, [sp], #4

20020d20 <check_array_range_pass(unsigned int)>:
20020d20:	2816      	cmp	r0, #22
20020d22:	4b03      	ldr	r3, [pc, #12]	; (20020d30 <check_array_range_pass(unsigned int)+0x10>)
20020d24:	bf94      	ite	ls
20020d26:	227f      	movls	r2, #127	; 0x7f
20020d28:	2283      	movhi	r2, #131	; 0x83
20020d2a:	62da      	str	r2, [r3, #44]	; 0x2c
20020d2c:	4770      	bx	lr
20020d2e:	bf00      	nop
20020d30:	20022500 	.word	0x20022500

20020d34 <check_array_range_fail(unsigned int)>:
20020d34:	2816      	cmp	r0, #22
20020d36:	4b03      	ldr	r3, [pc, #12]	; (20020d44 <check_array_range_fail(unsigned int)+0x10>)
20020d38:	bf94      	ite	ls
20020d3a:	2295      	movls	r2, #149	; 0x95
20020d3c:	2297      	movhi	r2, #151	; 0x97
20020d3e:	62da      	str	r2, [r3, #44]	; 0x2c
20020d40:	4770      	bx	lr
20020d42:	bf00      	nop
20020d44:	20022500 	.word	0x20022500

20020d48 <check_bits_range_pass(unsigned int)>:
20020d48:	280f      	cmp	r0, #15
20020d4a:	4b03      	ldr	r3, [pc, #12]	; (20020d58 <check_bits_range_pass(unsigned int)+0x10>)
20020d4c:	bf94      	ite	ls
20020d4e:	229d      	movls	r2, #157	; 0x9d
20020d50:	22a3      	movhi	r2, #163	; 0xa3
20020d52:	62da      	str	r2, [r3, #44]	; 0x2c
20020d54:	4770      	bx	lr
20020d56:	bf00      	nop
20020d58:	20022500 	.word	0x20022500

20020d5c <check_bits_range_fail(unsigned int)>:
20020d5c:	280f      	cmp	r0, #15
20020d5e:	4b03      	ldr	r3, [pc, #12]	; (20020d6c <check_bits_range_fail(unsigned int)+0x10>)
20020d60:	bf94      	ite	ls
20020d62:	22a7      	movls	r2, #167	; 0xa7
20020d64:	22ad      	movhi	r2, #173	; 0xad
20020d66:	62da      	str	r2, [r3, #44]	; 0x2c
20020d68:	4770      	bx	lr
20020d6a:	bf00      	nop
20020d6c:	20022500 	.word	0x20022500

20020d70 <check_mskd_range_pass(unsigned int)>:
20020d70:	281f      	cmp	r0, #31
20020d72:	4b03      	ldr	r3, [pc, #12]	; (20020d80 <check_mskd_range_pass(unsigned int)+0x10>)
20020d74:	bf94      	ite	ls
20020d76:	22b3      	movls	r2, #179	; 0xb3
20020d78:	22b5      	movhi	r2, #181	; 0xb5
20020d7a:	62da      	str	r2, [r3, #44]	; 0x2c
20020d7c:	4770      	bx	lr
20020d7e:	bf00      	nop
20020d80:	20022500 	.word	0x20022500

20020d84 <check_mskd_range_fail(unsigned int)>:
20020d84:	281f      	cmp	r0, #31
20020d86:	4b03      	ldr	r3, [pc, #12]	; (20020d94 <check_mskd_range_fail(unsigned int)+0x10>)
20020d88:	bf94      	ite	ls
20020d8a:	22bf      	movls	r2, #191	; 0xbf
20020d8c:	22c1      	movhi	r2, #193	; 0xc1
20020d8e:	62da      	str	r2, [r3, #44]	; 0x2c
20020d90:	4770      	bx	lr
20020d92:	bf00      	nop
20020d94:	20022500 	.word	0x20022500

20020d98 <bits_extract_ne()>:
20020d98:	4b05      	ldr	r3, [pc, #20]	; (20020db0 <bits_extract_ne()+0x18>)
20020d9a:	2220      	movs	r2, #32
20020d9c:	605a      	str	r2, [r3, #4]
20020d9e:	685b      	ldr	r3, [r3, #4]
20020da0:	4293      	cmp	r3, r2
20020da2:	4b03      	ldr	r3, [pc, #12]	; (20020db0 <bits_extract_ne()+0x18>)
20020da4:	bf14      	ite	ne
20020da6:	2202      	movne	r2, #2
20020da8:	2204      	moveq	r2, #4
20020daa:	605a      	str	r2, [r3, #4]
20020dac:	4770      	bx	lr
20020dae:	bf00      	nop
20020db0:	200226c0 	.word	0x200226c0

20020db4 <mskd_extract_geq()>:
20020db4:	4b05      	ldr	r3, [pc, #20]	; (20020dcc <mskd_extract_geq()+0x18>)
20020db6:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
20020dba:	605a      	str	r2, [r3, #4]
20020dbc:	685b      	ldr	r3, [r3, #4]
20020dbe:	4293      	cmp	r3, r2
20020dc0:	4b03      	ldr	r3, [pc, #12]	; (20020dd0 <mskd_extract_geq()+0x1c>)
20020dc2:	bf2c      	ite	cs
20020dc4:	2220      	movcs	r2, #32
20020dc6:	2240      	movcc	r2, #64	; 0x40
20020dc8:	605a      	str	r2, [r3, #4]
20020dca:	4770      	bx	lr
20020dcc:	20022620 	.word	0x20022620
20020dd0:	200226c0 	.word	0x200226c0

20020dd4 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>:
20020dd4:	4b04      	ldr	r3, [pc, #16]	; (20020de8 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x14>)
20020dd6:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020dda:	605a      	str	r2, [r3, #4]
20020ddc:	685b      	ldr	r3, [r3, #4]
20020dde:	4018      	ands	r0, r3
20020de0:	40c8      	lsrs	r0, r1
20020de2:	4b02      	ldr	r3, [pc, #8]	; (20020dec <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x18>)
20020de4:	62d8      	str	r0, [r3, #44]	; 0x2c
20020de6:	4770      	bx	lr
20020de8:	20022620 	.word	0x20022620
20020dec:	20022500 	.word	0x20022500

20020df0 <call_shifted_const_val()>:
20020df0:	b500      	push	{lr}
20020df2:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020df6:	2119      	movs	r1, #25
20020df8:	f7ff ffec 	bl	20020dd4 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020dfc:	f85d fb04 	ldr.w	pc, [sp], #4

20020e00 <call_shifted_var_val()>:
20020e00:	b500      	push	{lr}
20020e02:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020e06:	2119      	movs	r1, #25
20020e08:	f7ff ffe4 	bl	20020dd4 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020e0c:	f85d fb04 	ldr.w	pc, [sp], #4

20020e10 <call_shifted_global_val()>:
20020e10:	b500      	push	{lr}
20020e12:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020e16:	2119      	movs	r1, #25
20020e18:	f7ff ffdc 	bl	20020dd4 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020e1c:	f85d fb04 	ldr.w	pc, [sp], #4

20020e20 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>:
20020e20:	4b05      	ldr	r3, [pc, #20]	; (20020e38 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x18>)
20020e22:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020e26:	605a      	str	r2, [r3, #4]
20020e28:	685b      	ldr	r3, [r3, #4]
20020e2a:	6802      	ldr	r2, [r0, #0]
20020e2c:	4013      	ands	r3, r2
20020e2e:	6842      	ldr	r2, [r0, #4]
20020e30:	40d3      	lsrs	r3, r2
20020e32:	4a02      	ldr	r2, [pc, #8]	; (20020e3c <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x1c>)
20020e34:	62d3      	str	r3, [r2, #44]	; 0x2c
20020e36:	4770      	bx	lr
20020e38:	20022620 	.word	0x20022620
20020e3c:	20022500 	.word	0x20022500

20020e40 <call_shifted_const_ref()>:
20020e40:	b500      	push	{lr}
20020e42:	b082      	sub	sp, #8
20020e44:	4b05      	ldr	r3, [pc, #20]	; (20020e5c <call_shifted_const_ref()+0x1c>)
20020e46:	f103 0308 	add.w	r3, r3, #8
20020e4a:	cb0c      	ldmia	r3, {r2, r3}
20020e4c:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e50:	4668      	mov	r0, sp
20020e52:	f7ff ffe5 	bl	20020e20 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e56:	b002      	add	sp, #8
20020e58:	f85d fb04 	ldr.w	pc, [sp], #4
20020e5c:	20021780 	.word	0x20021780

20020e60 <call_shifted_var_ref()>:
20020e60:	b500      	push	{lr}
20020e62:	b082      	sub	sp, #8
20020e64:	4b05      	ldr	r3, [pc, #20]	; (20020e7c <call_shifted_var_ref()+0x1c>)
20020e66:	f103 0310 	add.w	r3, r3, #16
20020e6a:	cb0c      	ldmia	r3, {r2, r3}
20020e6c:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e70:	4668      	mov	r0, sp
20020e72:	f7ff ffd5 	bl	20020e20 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e76:	b002      	add	sp, #8
20020e78:	f85d fb04 	ldr.w	pc, [sp], #4
20020e7c:	20021780 	.word	0x20021780

20020e80 <call_shifted_global_ref()>:
20020e80:	b500      	push	{lr}
20020e82:	b082      	sub	sp, #8
20020e84:	4b05      	ldr	r3, [pc, #20]	; (20020e9c <call_shifted_global_ref()+0x1c>)
20020e86:	f103 0308 	add.w	r3, r3, #8
20020e8a:	cb0c      	ldmia	r3, {r2, r3}
20020e8c:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e90:	4668      	mov	r0, sp
20020e92:	f7ff ffc5 	bl	20020e20 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e96:	b002      	add	sp, #8
20020e98:	f85d fb04 	ldr.w	pc, [sp], #4
20020e9c:	20021780 	.word	0x20021780

20020ea0 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>:
20020ea0:	f010 0f40 	tst.w	r0, #64	; 0x40
20020ea4:	4b02      	ldr	r3, [pc, #8]	; (20020eb0 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)+0x10>)
20020ea6:	bf14      	ite	ne
20020ea8:	2202      	movne	r2, #2
20020eaa:	2204      	moveq	r2, #4
20020eac:	605a      	str	r2, [r3, #4]
20020eae:	4770      	bx	lr
20020eb0:	200226c0 	.word	0x200226c0

20020eb4 <call_copy_bits_val()>:
20020eb4:	b500      	push	{lr}
20020eb6:	4b04      	ldr	r3, [pc, #16]	; (20020ec8 <call_copy_bits_val()+0x14>)
20020eb8:	2240      	movs	r2, #64	; 0x40
20020eba:	605a      	str	r2, [r3, #4]
20020ebc:	6858      	ldr	r0, [r3, #4]
20020ebe:	f7ff ffef 	bl	20020ea0 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>
20020ec2:	f85d fb04 	ldr.w	pc, [sp], #4
20020ec6:	bf00      	nop
20020ec8:	200226c0 	.word	0x200226c0

20020ecc <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>:
20020ecc:	6803      	ldr	r3, [r0, #0]
20020ece:	f013 0f40 	tst.w	r3, #64	; 0x40
20020ed2:	4b03      	ldr	r3, [pc, #12]	; (20020ee0 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)+0x14>)
20020ed4:	bf14      	ite	ne
20020ed6:	2202      	movne	r2, #2
20020ed8:	2204      	moveq	r2, #4
20020eda:	605a      	str	r2, [r3, #4]
20020edc:	4770      	bx	lr
20020ede:	bf00      	nop
20020ee0:	200226c0 	.word	0x200226c0

20020ee4 <call_copy_bits_ref()>:
20020ee4:	b500      	push	{lr}
20020ee6:	b081      	sub	sp, #4
20020ee8:	4b05      	ldr	r3, [pc, #20]	; (20020f00 <call_copy_bits_ref()+0x1c>)
20020eea:	2240      	movs	r2, #64	; 0x40
20020eec:	605a      	str	r2, [r3, #4]
20020eee:	685b      	ldr	r3, [r3, #4]
20020ef0:	9300      	str	r3, [sp, #0]
20020ef2:	4668      	mov	r0, sp
20020ef4:	f7ff ffea 	bl	20020ecc <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>
20020ef8:	b001      	add	sp, #4
20020efa:	f85d fb04 	ldr.w	pc, [sp], #4
20020efe:	bf00      	nop
20020f00:	200226c0 	.word	0x200226c0

20020f04 <run>:
20020f04:	b530      	push	{r4, r5, lr}
20020f06:	4bb0      	ldr	r3, [pc, #704]	; (200211c8 <run+0x2c4>)
20020f08:	781b      	ldrb	r3, [r3, #0]
20020f0a:	b923      	cbnz	r3, 20020f16 <run+0x12>
20020f0c:	4bae      	ldr	r3, [pc, #696]	; (200211c8 <run+0x2c4>)
20020f0e:	4aaf      	ldr	r2, [pc, #700]	; (200211cc <run+0x2c8>)
20020f10:	609a      	str	r2, [r3, #8]
20020f12:	2201      	movs	r2, #1
20020f14:	701a      	strb	r2, [r3, #0]
20020f16:	4bac      	ldr	r3, [pc, #688]	; (200211c8 <run+0x2c4>)
20020f18:	7b1b      	ldrb	r3, [r3, #12]
20020f1a:	b923      	cbnz	r3, 20020f26 <run+0x22>
20020f1c:	4baa      	ldr	r3, [pc, #680]	; (200211c8 <run+0x2c4>)
20020f1e:	4aac      	ldr	r2, [pc, #688]	; (200211d0 <run+0x2cc>)
20020f20:	615a      	str	r2, [r3, #20]
20020f22:	2201      	movs	r2, #1
20020f24:	731a      	strb	r2, [r3, #12]
20020f26:	4ba8      	ldr	r3, [pc, #672]	; (200211c8 <run+0x2c4>)
20020f28:	7e1b      	ldrb	r3, [r3, #24]
20020f2a:	b923      	cbnz	r3, 20020f36 <run+0x32>
20020f2c:	4ba6      	ldr	r3, [pc, #664]	; (200211c8 <run+0x2c4>)
20020f2e:	4aa9      	ldr	r2, [pc, #676]	; (200211d4 <run+0x2d0>)
20020f30:	621a      	str	r2, [r3, #32]
20020f32:	2201      	movs	r2, #1
20020f34:	761a      	strb	r2, [r3, #24]
20020f36:	4ca4      	ldr	r4, [pc, #656]	; (200211c8 <run+0x2c4>)
20020f38:	2200      	movs	r2, #0
20020f3a:	68a1      	ldr	r1, [r4, #8]
20020f3c:	48a6      	ldr	r0, [pc, #664]	; (200211d8 <run+0x2d4>)
20020f3e:	f000 fb4c 	bl	200215da <do_test>
20020f42:	2201      	movs	r2, #1
20020f44:	68a1      	ldr	r1, [r4, #8]
20020f46:	48a5      	ldr	r0, [pc, #660]	; (200211dc <run+0x2d8>)
20020f48:	f000 fb47 	bl	200215da <do_test>
20020f4c:	2202      	movs	r2, #2
20020f4e:	68a1      	ldr	r1, [r4, #8]
20020f50:	48a3      	ldr	r0, [pc, #652]	; (200211e0 <run+0x2dc>)
20020f52:	f000 fb42 	bl	200215da <do_test>
20020f56:	2203      	movs	r2, #3
20020f58:	68a1      	ldr	r1, [r4, #8]
20020f5a:	48a2      	ldr	r0, [pc, #648]	; (200211e4 <run+0x2e0>)
20020f5c:	f000 fb3d 	bl	200215da <do_test>
20020f60:	2204      	movs	r2, #4
20020f62:	68a1      	ldr	r1, [r4, #8]
20020f64:	48a0      	ldr	r0, [pc, #640]	; (200211e8 <run+0x2e4>)
20020f66:	f000 fb38 	bl	200215da <do_test>
20020f6a:	2205      	movs	r2, #5
20020f6c:	68a1      	ldr	r1, [r4, #8]
20020f6e:	489f      	ldr	r0, [pc, #636]	; (200211ec <run+0x2e8>)
20020f70:	f000 fb33 	bl	200215da <do_test>
20020f74:	2206      	movs	r2, #6
20020f76:	68a1      	ldr	r1, [r4, #8]
20020f78:	489d      	ldr	r0, [pc, #628]	; (200211f0 <run+0x2ec>)
20020f7a:	f000 fb2e 	bl	200215da <do_test>
20020f7e:	2207      	movs	r2, #7
20020f80:	68a1      	ldr	r1, [r4, #8]
20020f82:	489c      	ldr	r0, [pc, #624]	; (200211f4 <run+0x2f0>)
20020f84:	f000 fb29 	bl	200215da <do_test>
20020f88:	2208      	movs	r2, #8
20020f8a:	68a1      	ldr	r1, [r4, #8]
20020f8c:	489a      	ldr	r0, [pc, #616]	; (200211f8 <run+0x2f4>)
20020f8e:	f000 fb24 	bl	200215da <do_test>
20020f92:	2209      	movs	r2, #9
20020f94:	68a1      	ldr	r1, [r4, #8]
20020f96:	4899      	ldr	r0, [pc, #612]	; (200211fc <run+0x2f8>)
20020f98:	f000 fb1f 	bl	200215da <do_test>
20020f9c:	220a      	movs	r2, #10
20020f9e:	68a1      	ldr	r1, [r4, #8]
20020fa0:	4897      	ldr	r0, [pc, #604]	; (20021200 <run+0x2fc>)
20020fa2:	f000 fb1a 	bl	200215da <do_test>
20020fa6:	220b      	movs	r2, #11
20020fa8:	68a1      	ldr	r1, [r4, #8]
20020faa:	4896      	ldr	r0, [pc, #600]	; (20021204 <run+0x300>)
20020fac:	f000 fb15 	bl	200215da <do_test>
20020fb0:	220c      	movs	r2, #12
20020fb2:	68a1      	ldr	r1, [r4, #8]
20020fb4:	4894      	ldr	r0, [pc, #592]	; (20021208 <run+0x304>)
20020fb6:	f000 fb10 	bl	200215da <do_test>
20020fba:	220d      	movs	r2, #13
20020fbc:	68a1      	ldr	r1, [r4, #8]
20020fbe:	4893      	ldr	r0, [pc, #588]	; (2002120c <run+0x308>)
20020fc0:	f000 fb0b 	bl	200215da <do_test>
20020fc4:	220e      	movs	r2, #14
20020fc6:	68a1      	ldr	r1, [r4, #8]
20020fc8:	4891      	ldr	r0, [pc, #580]	; (20021210 <run+0x30c>)
20020fca:	f000 fb06 	bl	200215da <do_test>
20020fce:	220f      	movs	r2, #15
20020fd0:	68a1      	ldr	r1, [r4, #8]
20020fd2:	4890      	ldr	r0, [pc, #576]	; (20021214 <run+0x310>)
20020fd4:	f000 fb01 	bl	200215da <do_test>
20020fd8:	2210      	movs	r2, #16
20020fda:	68a1      	ldr	r1, [r4, #8]
20020fdc:	488e      	ldr	r0, [pc, #568]	; (20021218 <run+0x314>)
20020fde:	f000 fafc 	bl	200215da <do_test>
20020fe2:	2211      	movs	r2, #17
20020fe4:	68a1      	ldr	r1, [r4, #8]
20020fe6:	488d      	ldr	r0, [pc, #564]	; (2002121c <run+0x318>)
20020fe8:	f000 faf7 	bl	200215da <do_test>
20020fec:	2212      	movs	r2, #18
20020fee:	68a1      	ldr	r1, [r4, #8]
20020ff0:	488b      	ldr	r0, [pc, #556]	; (20021220 <run+0x31c>)
20020ff2:	f000 faf2 	bl	200215da <do_test>
20020ff6:	2213      	movs	r2, #19
20020ff8:	68a1      	ldr	r1, [r4, #8]
20020ffa:	488a      	ldr	r0, [pc, #552]	; (20021224 <run+0x320>)
20020ffc:	f000 faed 	bl	200215da <do_test>
20021000:	2214      	movs	r2, #20
20021002:	68a1      	ldr	r1, [r4, #8]
20021004:	4888      	ldr	r0, [pc, #544]	; (20021228 <run+0x324>)
20021006:	f000 fae8 	bl	200215da <do_test>
2002100a:	2215      	movs	r2, #21
2002100c:	68a1      	ldr	r1, [r4, #8]
2002100e:	4887      	ldr	r0, [pc, #540]	; (2002122c <run+0x328>)
20021010:	f000 fae3 	bl	200215da <do_test>
20021014:	2216      	movs	r2, #22
20021016:	68a1      	ldr	r1, [r4, #8]
20021018:	4885      	ldr	r0, [pc, #532]	; (20021230 <run+0x32c>)
2002101a:	f000 fade 	bl	200215da <do_test>
2002101e:	2217      	movs	r2, #23
20021020:	68a1      	ldr	r1, [r4, #8]
20021022:	4884      	ldr	r0, [pc, #528]	; (20021234 <run+0x330>)
20021024:	f000 fad9 	bl	200215da <do_test>
20021028:	2218      	movs	r2, #24
2002102a:	68a1      	ldr	r1, [r4, #8]
2002102c:	4882      	ldr	r0, [pc, #520]	; (20021238 <run+0x334>)
2002102e:	f000 fad4 	bl	200215da <do_test>
20021032:	2219      	movs	r2, #25
20021034:	68a1      	ldr	r1, [r4, #8]
20021036:	4881      	ldr	r0, [pc, #516]	; (2002123c <run+0x338>)
20021038:	f000 facf 	bl	200215da <do_test>
2002103c:	221a      	movs	r2, #26
2002103e:	68a1      	ldr	r1, [r4, #8]
20021040:	487f      	ldr	r0, [pc, #508]	; (20021240 <run+0x33c>)
20021042:	f000 faca 	bl	200215da <do_test>
20021046:	221b      	movs	r2, #27
20021048:	68a1      	ldr	r1, [r4, #8]
2002104a:	487e      	ldr	r0, [pc, #504]	; (20021244 <run+0x340>)
2002104c:	f000 fac5 	bl	200215da <do_test>
20021050:	221c      	movs	r2, #28
20021052:	68a1      	ldr	r1, [r4, #8]
20021054:	487c      	ldr	r0, [pc, #496]	; (20021248 <run+0x344>)
20021056:	f000 fac0 	bl	200215da <do_test>
2002105a:	221d      	movs	r2, #29
2002105c:	68a1      	ldr	r1, [r4, #8]
2002105e:	487b      	ldr	r0, [pc, #492]	; (2002124c <run+0x348>)
20021060:	f000 fabb 	bl	200215da <do_test>
20021064:	221e      	movs	r2, #30
20021066:	68a1      	ldr	r1, [r4, #8]
20021068:	4879      	ldr	r0, [pc, #484]	; (20021250 <run+0x34c>)
2002106a:	f000 fab6 	bl	200215da <do_test>
2002106e:	221f      	movs	r2, #31
20021070:	68a1      	ldr	r1, [r4, #8]
20021072:	4878      	ldr	r0, [pc, #480]	; (20021254 <run+0x350>)
20021074:	f000 fab1 	bl	200215da <do_test>
20021078:	2220      	movs	r2, #32
2002107a:	68a1      	ldr	r1, [r4, #8]
2002107c:	4876      	ldr	r0, [pc, #472]	; (20021258 <run+0x354>)
2002107e:	f000 faac 	bl	200215da <do_test>
20021082:	2221      	movs	r2, #33	; 0x21
20021084:	68a1      	ldr	r1, [r4, #8]
20021086:	4875      	ldr	r0, [pc, #468]	; (2002125c <run+0x358>)
20021088:	f000 faa7 	bl	200215da <do_test>
2002108c:	2222      	movs	r2, #34	; 0x22
2002108e:	68a1      	ldr	r1, [r4, #8]
20021090:	4873      	ldr	r0, [pc, #460]	; (20021260 <run+0x35c>)
20021092:	f000 faa2 	bl	200215da <do_test>
20021096:	2223      	movs	r2, #35	; 0x23
20021098:	68a1      	ldr	r1, [r4, #8]
2002109a:	4872      	ldr	r0, [pc, #456]	; (20021264 <run+0x360>)
2002109c:	f000 fa9d 	bl	200215da <do_test>
200210a0:	2224      	movs	r2, #36	; 0x24
200210a2:	68a1      	ldr	r1, [r4, #8]
200210a4:	4870      	ldr	r0, [pc, #448]	; (20021268 <run+0x364>)
200210a6:	f000 fa98 	bl	200215da <do_test>
200210aa:	2225      	movs	r2, #37	; 0x25
200210ac:	6961      	ldr	r1, [r4, #20]
200210ae:	486f      	ldr	r0, [pc, #444]	; (2002126c <run+0x368>)
200210b0:	f000 fa93 	bl	200215da <do_test>
200210b4:	2226      	movs	r2, #38	; 0x26
200210b6:	6961      	ldr	r1, [r4, #20]
200210b8:	486d      	ldr	r0, [pc, #436]	; (20021270 <run+0x36c>)
200210ba:	f000 fa8e 	bl	200215da <do_test>
200210be:	2227      	movs	r2, #39	; 0x27
200210c0:	6961      	ldr	r1, [r4, #20]
200210c2:	486c      	ldr	r0, [pc, #432]	; (20021274 <run+0x370>)
200210c4:	f000 fa89 	bl	200215da <do_test>
200210c8:	2228      	movs	r2, #40	; 0x28
200210ca:	68a1      	ldr	r1, [r4, #8]
200210cc:	486a      	ldr	r0, [pc, #424]	; (20021278 <run+0x374>)
200210ce:	f000 fa84 	bl	200215da <do_test>
200210d2:	2229      	movs	r2, #41	; 0x29
200210d4:	68a1      	ldr	r1, [r4, #8]
200210d6:	4869      	ldr	r0, [pc, #420]	; (2002127c <run+0x378>)
200210d8:	f000 fa7f 	bl	200215da <do_test>
200210dc:	222a      	movs	r2, #42	; 0x2a
200210de:	68a1      	ldr	r1, [r4, #8]
200210e0:	4867      	ldr	r0, [pc, #412]	; (20021280 <run+0x37c>)
200210e2:	f000 fa7a 	bl	200215da <do_test>
200210e6:	222b      	movs	r2, #43	; 0x2b
200210e8:	68a1      	ldr	r1, [r4, #8]
200210ea:	4866      	ldr	r0, [pc, #408]	; (20021284 <run+0x380>)
200210ec:	f000 fa75 	bl	200215da <do_test>
200210f0:	222c      	movs	r2, #44	; 0x2c
200210f2:	68a1      	ldr	r1, [r4, #8]
200210f4:	4864      	ldr	r0, [pc, #400]	; (20021288 <run+0x384>)
200210f6:	f000 fa70 	bl	200215da <do_test>
200210fa:	222d      	movs	r2, #45	; 0x2d
200210fc:	6a21      	ldr	r1, [r4, #32]
200210fe:	4863      	ldr	r0, [pc, #396]	; (2002128c <run+0x388>)
20021100:	f000 fa6b 	bl	200215da <do_test>
20021104:	222e      	movs	r2, #46	; 0x2e
20021106:	68a1      	ldr	r1, [r4, #8]
20021108:	4861      	ldr	r0, [pc, #388]	; (20021290 <run+0x38c>)
2002110a:	f000 fa66 	bl	200215da <do_test>
2002110e:	222f      	movs	r2, #47	; 0x2f
20021110:	68a1      	ldr	r1, [r4, #8]
20021112:	4860      	ldr	r0, [pc, #384]	; (20021294 <run+0x390>)
20021114:	f000 fa61 	bl	200215da <do_test>
20021118:	2230      	movs	r2, #48	; 0x30
2002111a:	68a1      	ldr	r1, [r4, #8]
2002111c:	485e      	ldr	r0, [pc, #376]	; (20021298 <run+0x394>)
2002111e:	f000 fa5c 	bl	200215da <do_test>
20021122:	2231      	movs	r2, #49	; 0x31
20021124:	68a1      	ldr	r1, [r4, #8]
20021126:	485d      	ldr	r0, [pc, #372]	; (2002129c <run+0x398>)
20021128:	f000 fa57 	bl	200215da <do_test>
2002112c:	2232      	movs	r2, #50	; 0x32
2002112e:	68a1      	ldr	r1, [r4, #8]
20021130:	485b      	ldr	r0, [pc, #364]	; (200212a0 <run+0x39c>)
20021132:	f000 fa52 	bl	200215da <do_test>
20021136:	2233      	movs	r2, #51	; 0x33
20021138:	68a1      	ldr	r1, [r4, #8]
2002113a:	485a      	ldr	r0, [pc, #360]	; (200212a4 <run+0x3a0>)
2002113c:	f000 fa4d 	bl	200215da <do_test>
20021140:	2234      	movs	r2, #52	; 0x34
20021142:	68a1      	ldr	r1, [r4, #8]
20021144:	4858      	ldr	r0, [pc, #352]	; (200212a8 <run+0x3a4>)
20021146:	f000 fa48 	bl	200215da <do_test>
2002114a:	2235      	movs	r2, #53	; 0x35
2002114c:	68a1      	ldr	r1, [r4, #8]
2002114e:	4857      	ldr	r0, [pc, #348]	; (200212ac <run+0x3a8>)
20021150:	f000 fa43 	bl	200215da <do_test>
20021154:	2236      	movs	r2, #54	; 0x36
20021156:	68a1      	ldr	r1, [r4, #8]
20021158:	4855      	ldr	r0, [pc, #340]	; (200212b0 <run+0x3ac>)
2002115a:	f000 fa3e 	bl	200215da <do_test>
2002115e:	2237      	movs	r2, #55	; 0x37
20021160:	68a1      	ldr	r1, [r4, #8]
20021162:	4854      	ldr	r0, [pc, #336]	; (200212b4 <run+0x3b0>)
20021164:	f000 fa39 	bl	200215da <do_test>
20021168:	2238      	movs	r2, #56	; 0x38
2002116a:	68a1      	ldr	r1, [r4, #8]
2002116c:	4852      	ldr	r0, [pc, #328]	; (200212b8 <run+0x3b4>)
2002116e:	f000 fa34 	bl	200215da <do_test>
20021172:	2239      	movs	r2, #57	; 0x39
20021174:	68a1      	ldr	r1, [r4, #8]
20021176:	4851      	ldr	r0, [pc, #324]	; (200212bc <run+0x3b8>)
20021178:	f000 fa2f 	bl	200215da <do_test>
2002117c:	223a      	movs	r2, #58	; 0x3a
2002117e:	68a1      	ldr	r1, [r4, #8]
20021180:	484f      	ldr	r0, [pc, #316]	; (200212c0 <run+0x3bc>)
20021182:	f000 fa2a 	bl	200215da <do_test>
20021186:	223b      	movs	r2, #59	; 0x3b
20021188:	68a1      	ldr	r1, [r4, #8]
2002118a:	484e      	ldr	r0, [pc, #312]	; (200212c4 <run+0x3c0>)
2002118c:	f000 fa25 	bl	200215da <do_test>
20021190:	223c      	movs	r2, #60	; 0x3c
20021192:	68a1      	ldr	r1, [r4, #8]
20021194:	484c      	ldr	r0, [pc, #304]	; (200212c8 <run+0x3c4>)
20021196:	f000 fa20 	bl	200215da <do_test>
2002119a:	223d      	movs	r2, #61	; 0x3d
2002119c:	68a1      	ldr	r1, [r4, #8]
2002119e:	484b      	ldr	r0, [pc, #300]	; (200212cc <run+0x3c8>)
200211a0:	f000 fa1b 	bl	200215da <do_test>
200211a4:	223e      	movs	r2, #62	; 0x3e
200211a6:	68a1      	ldr	r1, [r4, #8]
200211a8:	4849      	ldr	r0, [pc, #292]	; (200212d0 <run+0x3cc>)
200211aa:	f000 fa16 	bl	200215da <do_test>
200211ae:	223f      	movs	r2, #63	; 0x3f
200211b0:	68a1      	ldr	r1, [r4, #8]
200211b2:	4848      	ldr	r0, [pc, #288]	; (200212d4 <run+0x3d0>)
200211b4:	f000 fa11 	bl	200215da <do_test>
200211b8:	2240      	movs	r2, #64	; 0x40
200211ba:	68a1      	ldr	r1, [r4, #8]
200211bc:	4846      	ldr	r0, [pc, #280]	; (200212d8 <run+0x3d4>)
200211be:	f000 fa0c 	bl	200215da <do_test>
200211c2:	2241      	movs	r2, #65	; 0x41
200211c4:	68a1      	ldr	r1, [r4, #8]
200211c6:	e089      	b.n	200212dc <run+0x3d8>
200211c8:	20021798 	.word	0x20021798
200211cc:	200226c4 	.word	0x200226c4
200211d0:	20022624 	.word	0x20022624
200211d4:	2002252c 	.word	0x2002252c
200211d8:	200201f1 	.word	0x200201f1
200211dc:	200201fd 	.word	0x200201fd
200211e0:	20020209 	.word	0x20020209
200211e4:	20020219 	.word	0x20020219
200211e8:	20020229 	.word	0x20020229
200211ec:	20020239 	.word	0x20020239
200211f0:	20020249 	.word	0x20020249
200211f4:	20020259 	.word	0x20020259
200211f8:	20020269 	.word	0x20020269
200211fc:	20020279 	.word	0x20020279
20021200:	20020289 	.word	0x20020289
20021204:	20020295 	.word	0x20020295
20021208:	200202a1 	.word	0x200202a1
2002120c:	200202ad 	.word	0x200202ad
20021210:	200202b9 	.word	0x200202b9
20021214:	200202c9 	.word	0x200202c9
20021218:	200202d9 	.word	0x200202d9
2002121c:	200202e9 	.word	0x200202e9
20021220:	200202f9 	.word	0x200202f9
20021224:	2002030d 	.word	0x2002030d
20021228:	20020321 	.word	0x20020321
2002122c:	20020331 	.word	0x20020331
20021230:	20020341 	.word	0x20020341
20021234:	20020359 	.word	0x20020359
20021238:	20020371 	.word	0x20020371
2002123c:	2002037d 	.word	0x2002037d
20021240:	20020389 	.word	0x20020389
20021244:	20020399 	.word	0x20020399
20021248:	200203a9 	.word	0x200203a9
2002124c:	200203b5 	.word	0x200203b5
20021250:	200203c1 	.word	0x200203c1
20021254:	200203cd 	.word	0x200203cd
20021258:	200203d9 	.word	0x200203d9
2002125c:	200203e9 	.word	0x200203e9
20021260:	200203fd 	.word	0x200203fd
20021264:	20020425 	.word	0x20020425
20021268:	20020445 	.word	0x20020445
2002126c:	20020469 	.word	0x20020469
20021270:	20020485 	.word	0x20020485
20021274:	200204a9 	.word	0x200204a9
20021278:	200204cd 	.word	0x200204cd
2002127c:	200204fd 	.word	0x200204fd
20021280:	20020531 	.word	0x20020531
20021284:	20020555 	.word	0x20020555
20021288:	20020571 	.word	0x20020571
2002128c:	20020585 	.word	0x20020585
20021290:	20020925 	.word	0x20020925
20021294:	2002090d 	.word	0x2002090d
20021298:	20020919 	.word	0x20020919
2002129c:	20020971 	.word	0x20020971
200212a0:	20020949 	.word	0x20020949
200212a4:	2002095d 	.word	0x2002095d
200212a8:	200209bb 	.word	0x200209bb
200212ac:	200209ad 	.word	0x200209ad
200212b0:	20020a09 	.word	0x20020a09
200212b4:	200209ed 	.word	0x200209ed
200212b8:	20020a43 	.word	0x20020a43
200212bc:	20020a5d 	.word	0x20020a5d
200212c0:	20020a79 	.word	0x20020a79
200212c4:	20020a97 	.word	0x20020a97
200212c8:	20020abb 	.word	0x20020abb
200212cc:	20020ae3 	.word	0x20020ae3
200212d0:	20020b01 	.word	0x20020b01
200212d4:	20020b21 	.word	0x20020b21
200212d8:	20020b41 	.word	0x20020b41
200212dc:	4884      	ldr	r0, [pc, #528]	; (200214f0 <run+0x5ec>)
200212de:	f000 f97c 	bl	200215da <do_test>
200212e2:	2242      	movs	r2, #66	; 0x42
200212e4:	6961      	ldr	r1, [r4, #20]
200212e6:	4883      	ldr	r0, [pc, #524]	; (200214f4 <run+0x5f0>)
200212e8:	f000 f977 	bl	200215da <do_test>
200212ec:	2243      	movs	r2, #67	; 0x43
200212ee:	6961      	ldr	r1, [r4, #20]
200212f0:	4881      	ldr	r0, [pc, #516]	; (200214f8 <run+0x5f4>)
200212f2:	f000 f972 	bl	200215da <do_test>
200212f6:	2244      	movs	r2, #68	; 0x44
200212f8:	6961      	ldr	r1, [r4, #20]
200212fa:	4880      	ldr	r0, [pc, #512]	; (200214fc <run+0x5f8>)
200212fc:	f000 f96d 	bl	200215da <do_test>
20021300:	2245      	movs	r2, #69	; 0x45
20021302:	68a1      	ldr	r1, [r4, #8]
20021304:	487e      	ldr	r0, [pc, #504]	; (20021500 <run+0x5fc>)
20021306:	f000 f968 	bl	200215da <do_test>
2002130a:	2246      	movs	r2, #70	; 0x46
2002130c:	6a21      	ldr	r1, [r4, #32]
2002130e:	487d      	ldr	r0, [pc, #500]	; (20021504 <run+0x600>)
20021310:	f000 f963 	bl	200215da <do_test>
20021314:	2247      	movs	r2, #71	; 0x47
20021316:	6a21      	ldr	r1, [r4, #32]
20021318:	487b      	ldr	r0, [pc, #492]	; (20021508 <run+0x604>)
2002131a:	f000 f95e 	bl	200215da <do_test>
2002131e:	2248      	movs	r2, #72	; 0x48
20021320:	68a1      	ldr	r1, [r4, #8]
20021322:	487a      	ldr	r0, [pc, #488]	; (2002150c <run+0x608>)
20021324:	f000 f959 	bl	200215da <do_test>
20021328:	2249      	movs	r2, #73	; 0x49
2002132a:	68a1      	ldr	r1, [r4, #8]
2002132c:	4878      	ldr	r0, [pc, #480]	; (20021510 <run+0x60c>)
2002132e:	f000 f954 	bl	200215da <do_test>
20021332:	224a      	movs	r2, #74	; 0x4a
20021334:	6a21      	ldr	r1, [r4, #32]
20021336:	4877      	ldr	r0, [pc, #476]	; (20021514 <run+0x610>)
20021338:	f000 f94f 	bl	200215da <do_test>
2002133c:	224b      	movs	r2, #75	; 0x4b
2002133e:	6a21      	ldr	r1, [r4, #32]
20021340:	4875      	ldr	r0, [pc, #468]	; (20021518 <run+0x614>)
20021342:	f000 f94a 	bl	200215da <do_test>
20021346:	224c      	movs	r2, #76	; 0x4c
20021348:	68a1      	ldr	r1, [r4, #8]
2002134a:	4874      	ldr	r0, [pc, #464]	; (2002151c <run+0x618>)
2002134c:	f000 f945 	bl	200215da <do_test>
20021350:	224d      	movs	r2, #77	; 0x4d
20021352:	68a1      	ldr	r1, [r4, #8]
20021354:	4872      	ldr	r0, [pc, #456]	; (20021520 <run+0x61c>)
20021356:	f000 f940 	bl	200215da <do_test>
2002135a:	224e      	movs	r2, #78	; 0x4e
2002135c:	68a1      	ldr	r1, [r4, #8]
2002135e:	4871      	ldr	r0, [pc, #452]	; (20021524 <run+0x620>)
20021360:	f000 f93b 	bl	200215da <do_test>
20021364:	224f      	movs	r2, #79	; 0x4f
20021366:	68a1      	ldr	r1, [r4, #8]
20021368:	486f      	ldr	r0, [pc, #444]	; (20021528 <run+0x624>)
2002136a:	f000 f936 	bl	200215da <do_test>
2002136e:	2250      	movs	r2, #80	; 0x50
20021370:	68a1      	ldr	r1, [r4, #8]
20021372:	486e      	ldr	r0, [pc, #440]	; (2002152c <run+0x628>)
20021374:	f000 f931 	bl	200215da <do_test>
20021378:	2251      	movs	r2, #81	; 0x51
2002137a:	68a1      	ldr	r1, [r4, #8]
2002137c:	486c      	ldr	r0, [pc, #432]	; (20021530 <run+0x62c>)
2002137e:	f000 f92c 	bl	200215da <do_test>
20021382:	4d6c      	ldr	r5, [pc, #432]	; (20021534 <run+0x630>)
20021384:	2252      	movs	r2, #82	; 0x52
20021386:	68a1      	ldr	r1, [r4, #8]
20021388:	4628      	mov	r0, r5
2002138a:	f000 f926 	bl	200215da <do_test>
2002138e:	2253      	movs	r2, #83	; 0x53
20021390:	68a1      	ldr	r1, [r4, #8]
20021392:	4628      	mov	r0, r5
20021394:	f000 f921 	bl	200215da <do_test>
20021398:	2254      	movs	r2, #84	; 0x54
2002139a:	68a1      	ldr	r1, [r4, #8]
2002139c:	4866      	ldr	r0, [pc, #408]	; (20021538 <run+0x634>)
2002139e:	f000 f91c 	bl	200215da <do_test>
200213a2:	2255      	movs	r2, #85	; 0x55
200213a4:	68a1      	ldr	r1, [r4, #8]
200213a6:	4865      	ldr	r0, [pc, #404]	; (2002153c <run+0x638>)
200213a8:	f000 f917 	bl	200215da <do_test>
200213ac:	2256      	movs	r2, #86	; 0x56
200213ae:	68a1      	ldr	r1, [r4, #8]
200213b0:	4863      	ldr	r0, [pc, #396]	; (20021540 <run+0x63c>)
200213b2:	f000 f912 	bl	200215da <do_test>
200213b6:	4d63      	ldr	r5, [pc, #396]	; (20021544 <run+0x640>)
200213b8:	2257      	movs	r2, #87	; 0x57
200213ba:	68a1      	ldr	r1, [r4, #8]
200213bc:	4628      	mov	r0, r5
200213be:	f000 f90c 	bl	200215da <do_test>
200213c2:	2258      	movs	r2, #88	; 0x58
200213c4:	68a1      	ldr	r1, [r4, #8]
200213c6:	4860      	ldr	r0, [pc, #384]	; (20021548 <run+0x644>)
200213c8:	f000 f907 	bl	200215da <do_test>
200213cc:	2259      	movs	r2, #89	; 0x59
200213ce:	68a1      	ldr	r1, [r4, #8]
200213d0:	4628      	mov	r0, r5
200213d2:	f000 f902 	bl	200215da <do_test>
200213d6:	225a      	movs	r2, #90	; 0x5a
200213d8:	68a1      	ldr	r1, [r4, #8]
200213da:	485c      	ldr	r0, [pc, #368]	; (2002154c <run+0x648>)
200213dc:	f000 f8fd 	bl	200215da <do_test>
200213e0:	225b      	movs	r2, #91	; 0x5b
200213e2:	68a1      	ldr	r1, [r4, #8]
200213e4:	485a      	ldr	r0, [pc, #360]	; (20021550 <run+0x64c>)
200213e6:	f000 f8f8 	bl	200215da <do_test>
200213ea:	225c      	movs	r2, #92	; 0x5c
200213ec:	6a21      	ldr	r1, [r4, #32]
200213ee:	4859      	ldr	r0, [pc, #356]	; (20021554 <run+0x650>)
200213f0:	f000 f8f3 	bl	200215da <do_test>
200213f4:	225d      	movs	r2, #93	; 0x5d
200213f6:	6a21      	ldr	r1, [r4, #32]
200213f8:	4857      	ldr	r0, [pc, #348]	; (20021558 <run+0x654>)
200213fa:	f000 f8ee 	bl	200215da <do_test>
200213fe:	225e      	movs	r2, #94	; 0x5e
20021400:	68a1      	ldr	r1, [r4, #8]
20021402:	4856      	ldr	r0, [pc, #344]	; (2002155c <run+0x658>)
20021404:	f000 f8e9 	bl	200215da <do_test>
20021408:	225f      	movs	r2, #95	; 0x5f
2002140a:	6a21      	ldr	r1, [r4, #32]
2002140c:	4854      	ldr	r0, [pc, #336]	; (20021560 <run+0x65c>)
2002140e:	f000 f8e4 	bl	200215da <do_test>
20021412:	2260      	movs	r2, #96	; 0x60
20021414:	6a21      	ldr	r1, [r4, #32]
20021416:	4853      	ldr	r0, [pc, #332]	; (20021564 <run+0x660>)
20021418:	f000 f8df 	bl	200215da <do_test>
2002141c:	2261      	movs	r2, #97	; 0x61
2002141e:	68a1      	ldr	r1, [r4, #8]
20021420:	4851      	ldr	r0, [pc, #324]	; (20021568 <run+0x664>)
20021422:	f000 f8da 	bl	200215da <do_test>
20021426:	2262      	movs	r2, #98	; 0x62
20021428:	68a1      	ldr	r1, [r4, #8]
2002142a:	4850      	ldr	r0, [pc, #320]	; (2002156c <run+0x668>)
2002142c:	f000 f8d5 	bl	200215da <do_test>
20021430:	2263      	movs	r2, #99	; 0x63
20021432:	68a1      	ldr	r1, [r4, #8]
20021434:	484e      	ldr	r0, [pc, #312]	; (20021570 <run+0x66c>)
20021436:	f000 f8d0 	bl	200215da <do_test>
2002143a:	2264      	movs	r2, #100	; 0x64
2002143c:	68a1      	ldr	r1, [r4, #8]
2002143e:	484d      	ldr	r0, [pc, #308]	; (20021574 <run+0x670>)
20021440:	f000 f8cb 	bl	200215da <do_test>
20021444:	2265      	movs	r2, #101	; 0x65
20021446:	6a21      	ldr	r1, [r4, #32]
20021448:	484b      	ldr	r0, [pc, #300]	; (20021578 <run+0x674>)
2002144a:	f000 f8c6 	bl	200215da <do_test>
2002144e:	2266      	movs	r2, #102	; 0x66
20021450:	6a21      	ldr	r1, [r4, #32]
20021452:	484a      	ldr	r0, [pc, #296]	; (2002157c <run+0x678>)
20021454:	f000 f8c1 	bl	200215da <do_test>
20021458:	2267      	movs	r2, #103	; 0x67
2002145a:	6a21      	ldr	r1, [r4, #32]
2002145c:	4848      	ldr	r0, [pc, #288]	; (20021580 <run+0x67c>)
2002145e:	f000 f8bc 	bl	200215da <do_test>
20021462:	2268      	movs	r2, #104	; 0x68
20021464:	6a21      	ldr	r1, [r4, #32]
20021466:	4847      	ldr	r0, [pc, #284]	; (20021584 <run+0x680>)
20021468:	f000 f8b7 	bl	200215da <do_test>
2002146c:	2269      	movs	r2, #105	; 0x69
2002146e:	6a21      	ldr	r1, [r4, #32]
20021470:	4845      	ldr	r0, [pc, #276]	; (20021588 <run+0x684>)
20021472:	f000 f8b2 	bl	200215da <do_test>
20021476:	226a      	movs	r2, #106	; 0x6a
20021478:	6a21      	ldr	r1, [r4, #32]
2002147a:	4844      	ldr	r0, [pc, #272]	; (2002158c <run+0x688>)
2002147c:	f000 f8ad 	bl	200215da <do_test>
20021480:	226b      	movs	r2, #107	; 0x6b
20021482:	68a1      	ldr	r1, [r4, #8]
20021484:	4842      	ldr	r0, [pc, #264]	; (20021590 <run+0x68c>)
20021486:	f000 f8a8 	bl	200215da <do_test>
2002148a:	226c      	movs	r2, #108	; 0x6c
2002148c:	68a1      	ldr	r1, [r4, #8]
2002148e:	4841      	ldr	r0, [pc, #260]	; (20021594 <run+0x690>)
20021490:	f000 f8a3 	bl	200215da <do_test>
20021494:	226d      	movs	r2, #109	; 0x6d
20021496:	68a1      	ldr	r1, [r4, #8]
20021498:	483f      	ldr	r0, [pc, #252]	; (20021598 <run+0x694>)
2002149a:	f000 f89e 	bl	200215da <do_test>
2002149e:	226e      	movs	r2, #110	; 0x6e
200214a0:	68a1      	ldr	r1, [r4, #8]
200214a2:	483e      	ldr	r0, [pc, #248]	; (2002159c <run+0x698>)
200214a4:	f000 f899 	bl	200215da <do_test>
200214a8:	226f      	movs	r2, #111	; 0x6f
200214aa:	68a1      	ldr	r1, [r4, #8]
200214ac:	483c      	ldr	r0, [pc, #240]	; (200215a0 <run+0x69c>)
200214ae:	f000 f894 	bl	200215da <do_test>
200214b2:	2270      	movs	r2, #112	; 0x70
200214b4:	68a1      	ldr	r1, [r4, #8]
200214b6:	483b      	ldr	r0, [pc, #236]	; (200215a4 <run+0x6a0>)
200214b8:	f000 f88f 	bl	200215da <do_test>
200214bc:	2271      	movs	r2, #113	; 0x71
200214be:	68a1      	ldr	r1, [r4, #8]
200214c0:	4839      	ldr	r0, [pc, #228]	; (200215a8 <run+0x6a4>)
200214c2:	f000 f88a 	bl	200215da <do_test>
200214c6:	2272      	movs	r2, #114	; 0x72
200214c8:	68a1      	ldr	r1, [r4, #8]
200214ca:	4838      	ldr	r0, [pc, #224]	; (200215ac <run+0x6a8>)
200214cc:	f000 f885 	bl	200215da <do_test>
200214d0:	2273      	movs	r2, #115	; 0x73
200214d2:	68a1      	ldr	r1, [r4, #8]
200214d4:	4836      	ldr	r0, [pc, #216]	; (200215b0 <run+0x6ac>)
200214d6:	f000 f880 	bl	200215da <do_test>
200214da:	2274      	movs	r2, #116	; 0x74
200214dc:	68a1      	ldr	r1, [r4, #8]
200214de:	4835      	ldr	r0, [pc, #212]	; (200215b4 <run+0x6b0>)
200214e0:	f000 f87b 	bl	200215da <do_test>
200214e4:	2275      	movs	r2, #117	; 0x75
200214e6:	68a1      	ldr	r1, [r4, #8]
200214e8:	4833      	ldr	r0, [pc, #204]	; (200215b8 <run+0x6b4>)
200214ea:	f000 f876 	bl	200215da <do_test>
200214ee:	bd30      	pop	{r4, r5, pc}
200214f0:	20020b61 	.word	0x20020b61
200214f4:	20020b79 	.word	0x20020b79
200214f8:	20020ba3 	.word	0x20020ba3
200214fc:	20020be9 	.word	0x20020be9
20021500:	20020c15 	.word	0x20020c15
20021504:	20020c55 	.word	0x20020c55
20021508:	20020c95 	.word	0x20020c95
2002150c:	20020ce5 	.word	0x20020ce5
20021510:	20020d15 	.word	0x20020d15
20021514:	200205a1 	.word	0x200205a1
20021518:	200205bd 	.word	0x200205bd
2002151c:	200205d9 	.word	0x200205d9
20021520:	20020601 	.word	0x20020601
20021524:	20020639 	.word	0x20020639
20021528:	20020661 	.word	0x20020661
2002152c:	20020699 	.word	0x20020699
20021530:	200206a5 	.word	0x200206a5
20021534:	200206b1 	.word	0x200206b1
20021538:	200206cd 	.word	0x200206cd
2002153c:	200206e9 	.word	0x200206e9
20021540:	20020705 	.word	0x20020705
20021544:	20020729 	.word	0x20020729
20021548:	20020749 	.word	0x20020749
2002154c:	2002076d 	.word	0x2002076d
20021550:	2002077d 	.word	0x2002077d
20021554:	20020791 	.word	0x20020791
20021558:	2002079d 	.word	0x2002079d
2002155c:	200207b9 	.word	0x200207b9
20021560:	20020c67 	.word	0x20020c67
20021564:	20020caf 	.word	0x20020caf
20021568:	20020931 	.word	0x20020931
2002156c:	20020985 	.word	0x20020985
20021570:	200209c9 	.word	0x200209c9
20021574:	20020a21 	.word	0x20020a21
20021578:	20020df1 	.word	0x20020df1
2002157c:	20020e01 	.word	0x20020e01
20021580:	20020e11 	.word	0x20020e11
20021584:	20020e41 	.word	0x20020e41
20021588:	20020e61 	.word	0x20020e61
2002158c:	20020e81 	.word	0x20020e81
20021590:	200207c5 	.word	0x200207c5
20021594:	200207e1 	.word	0x200207e1
20021598:	200207fd 	.word	0x200207fd
2002159c:	20020821 	.word	0x20020821
200215a0:	20020845 	.word	0x20020845
200215a4:	2002086d 	.word	0x2002086d
200215a8:	20020891 	.word	0x20020891
200215ac:	200208b9 	.word	0x200208b9
200215b0:	200208dd 	.word	0x200208dd
200215b4:	20020eb5 	.word	0x20020eb5
200215b8:	20020ee5 	.word	0x20020ee5

200215bc <memset>:
200215bc:	4402      	add	r2, r0
200215be:	4290      	cmp	r0, r2
200215c0:	d20a      	bcs.n	200215d8 <memset+0x1c>
200215c2:	b410      	push	{r4}
200215c4:	4604      	mov	r4, r0
200215c6:	b2c9      	uxtb	r1, r1
200215c8:	4623      	mov	r3, r4
200215ca:	f803 1b01 	strb.w	r1, [r3], #1
200215ce:	461c      	mov	r4, r3
200215d0:	429a      	cmp	r2, r3
200215d2:	d1f9      	bne.n	200215c8 <memset+0xc>
200215d4:	bc10      	pop	{r4}
200215d6:	4770      	bx	lr
200215d8:	4770      	bx	lr

200215da <do_test>:
200215da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
200215de:	4607      	mov	r7, r0
200215e0:	460e      	mov	r6, r1
200215e2:	4614      	mov	r4, r2
200215e4:	4b16      	ldr	r3, [pc, #88]	; (20021640 <do_test+0x66>)
200215e6:	2200      	movs	r2, #0
200215e8:	601a      	str	r2, [r3, #0]
200215ea:	609a      	str	r2, [r3, #8]
200215ec:	2205      	movs	r2, #5
200215ee:	601a      	str	r2, [r3, #0]
200215f0:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
200215f4:	605a      	str	r2, [r3, #4]
200215f6:	689b      	ldr	r3, [r3, #8]
200215f8:	b923      	cbnz	r3, 20021604 <do_test+0x2a>
200215fa:	4a11      	ldr	r2, [pc, #68]	; (20021640 <do_test+0x66>)
200215fc:	bf00      	nop
200215fe:	6893      	ldr	r3, [r2, #8]
20021600:	2b00      	cmp	r3, #0
20021602:	d0fb      	beq.n	200215fc <do_test+0x22>
20021604:	f8df 8038 	ldr.w	r8, [pc, #56]	; 20021640 <do_test+0x66>
20021608:	f8d8 5008 	ldr.w	r5, [r8, #8]
2002160c:	2300      	movs	r3, #0
2002160e:	6033      	str	r3, [r6, #0]
20021610:	47b8      	blx	r7
20021612:	0064      	lsls	r4, r4, #1
20021614:	6833      	ldr	r3, [r6, #0]
20021616:	f8df 9030 	ldr.w	r9, [pc, #48]	; 20021648 <do_test+0x6e>
2002161a:	f849 3024 	str.w	r3, [r9, r4, lsl #2]
2002161e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
20021622:	6033      	str	r3, [r6, #0]
20021624:	47b8      	blx	r7
20021626:	6833      	ldr	r3, [r6, #0]
20021628:	3401      	adds	r4, #1
2002162a:	f849 3024 	str.w	r3, [r9, r4, lsl #2]
2002162e:	f8d8 1008 	ldr.w	r1, [r8, #8]
20021632:	4a04      	ldr	r2, [pc, #16]	; (20021644 <do_test+0x6a>)
20021634:	6813      	ldr	r3, [r2, #0]
20021636:	442b      	add	r3, r5
20021638:	1a5b      	subs	r3, r3, r1
2002163a:	6013      	str	r3, [r2, #0]
2002163c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
20021640:	e000e010 	.word	0xe000e010
20021644:	200217bc 	.word	0x200217bc
20021648:	200217c0 	.word	0x200217c0

2002164c <main>:
2002164c:	b500      	push	{lr}
2002164e:	f7ff fc59 	bl	20020f04 <run>
20021652:	bf00      	nop
20021654:	e7fd      	b.n	20021652 <main+0x6>
20021656:	bf00      	nop

20021658 <NMI_IRQ_Handler>:
20021658:	e7fe      	b.n	20021658 <NMI_IRQ_Handler>

2002165a <HardFault_IRQ_Handler>:
2002165a:	e7fe      	b.n	2002165a <HardFault_IRQ_Handler>

2002165c <MemManage_IRQ_Handler>:
2002165c:	e7fe      	b.n	2002165c <MemManage_IRQ_Handler>

2002165e <BusFault_IRQ_Handler>:
2002165e:	e7fe      	b.n	2002165e <BusFault_IRQ_Handler>

20021660 <UsageFault_IRQ_Handler>:
20021660:	e7fe      	b.n	20021660 <UsageFault_IRQ_Handler>

20021662 <Reserved1_IRQ_Handler>:
20021662:	e7fe      	b.n	20021662 <Reserved1_IRQ_Handler>

20021664 <Reserved2_IRQ_Handler>:
20021664:	e7fe      	b.n	20021664 <Reserved2_IRQ_Handler>

20021666 <Reserved3_IRQ_Handler>:
20021666:	e7fe      	b.n	20021666 <Reserved3_IRQ_Handler>

20021668 <Reserved4_IRQ_Handler>:
20021668:	e7fe      	b.n	20021668 <Reserved4_IRQ_Handler>

2002166a <SVCall_IRQ_Handler>:
2002166a:	e7fe      	b.n	2002166a <SVCall_IRQ_Handler>

2002166c <Debug_IRQ_Handler>:
2002166c:	e7fe      	b.n	2002166c <Debug_IRQ_Handler>

2002166e <Reserved5_IRQ_Handler>:
2002166e:	e7fe      	b.n	2002166e <Reserved5_IRQ_Handler>

20021670 <PendSV_IRQ_Handler>:
20021670:	e7fe      	b.n	20021670 <PendSV_IRQ_Handler>

20021672 <SysTick_IRQ_Handler>:
20021672:	e7fe      	b.n	20021672 <SysTick_IRQ_Handler>

20021674 <WWDG_IRQ_Handler>:
20021674:	e7fe      	b.n	20021674 <WWDG_IRQ_Handler>

20021676 <PVD_IRQ_Handler>:
20021676:	e7fe      	b.n	20021676 <PVD_IRQ_Handler>

20021678 <TAMP_STAMP_IRQ_Handler>:
20021678:	e7fe      	b.n	20021678 <TAMP_STAMP_IRQ_Handler>

2002167a <RTC_WKUP_IRQ_Handler>:
2002167a:	e7fe      	b.n	2002167a <RTC_WKUP_IRQ_Handler>

2002167c <FLASH_IRQ_Handler>:
2002167c:	e7fe      	b.n	2002167c <FLASH_IRQ_Handler>

2002167e <RCC_IRQ_Handler>:
2002167e:	e7fe      	b.n	2002167e <RCC_IRQ_Handler>

20021680 <EXTI0_IRQ_Handler>:
20021680:	e7fe      	b.n	20021680 <EXTI0_IRQ_Handler>

20021682 <EXTI1_IRQ_Handler>:
20021682:	e7fe      	b.n	20021682 <EXTI1_IRQ_Handler>

20021684 <EXTI2_IRQ_Handler>:
20021684:	e7fe      	b.n	20021684 <EXTI2_IRQ_Handler>

20021686 <EXTI3_IRQ_Handler>:
20021686:	e7fe      	b.n	20021686 <EXTI3_IRQ_Handler>

20021688 <EXTI4_IRQ_Handler>:
20021688:	e7fe      	b.n	20021688 <EXTI4_IRQ_Handler>

2002168a <DMA1_Stream0_IRQ_Handler>:
2002168a:	e7fe      	b.n	2002168a <DMA1_Stream0_IRQ_Handler>

2002168c <DMA1_Stream1_IRQ_Handler>:
2002168c:	e7fe      	b.n	2002168c <DMA1_Stream1_IRQ_Handler>

2002168e <DMA1_Stream2_IRQ_Handler>:
2002168e:	e7fe      	b.n	2002168e <DMA1_Stream2_IRQ_Handler>

20021690 <DMA1_Stream3_IRQ_Handler>:
20021690:	e7fe      	b.n	20021690 <DMA1_Stream3_IRQ_Handler>

20021692 <DMA1_Stream4_IRQ_Handler>:
20021692:	e7fe      	b.n	20021692 <DMA1_Stream4_IRQ_Handler>

20021694 <DMA1_Stream5_IRQ_Handler>:
20021694:	e7fe      	b.n	20021694 <DMA1_Stream5_IRQ_Handler>

20021696 <DMA1_Stream6_IRQ_Handler>:
20021696:	e7fe      	b.n	20021696 <DMA1_Stream6_IRQ_Handler>

20021698 <ADC_IRQ_Handler>:
20021698:	e7fe      	b.n	20021698 <ADC_IRQ_Handler>

2002169a <CAN1_TX_IRQ_Handler>:
2002169a:	e7fe      	b.n	2002169a <CAN1_TX_IRQ_Handler>

2002169c <CAN1_RX0_IRQ_Handler>:
2002169c:	e7fe      	b.n	2002169c <CAN1_RX0_IRQ_Handler>

2002169e <CAN1_RX1_IRQ_Handler>:
2002169e:	e7fe      	b.n	2002169e <CAN1_RX1_IRQ_Handler>

200216a0 <CAN1_SCE_IRQ_Handler>:
200216a0:	e7fe      	b.n	200216a0 <CAN1_SCE_IRQ_Handler>

200216a2 <EXTI9_5_IRQ_Handler>:
200216a2:	e7fe      	b.n	200216a2 <EXTI9_5_IRQ_Handler>

200216a4 <TIM1_BRK_TIM9_IRQ_Handler>:
200216a4:	e7fe      	b.n	200216a4 <TIM1_BRK_TIM9_IRQ_Handler>

200216a6 <TIM1_UP_TIM10_IRQ_Handler>:
200216a6:	e7fe      	b.n	200216a6 <TIM1_UP_TIM10_IRQ_Handler>

200216a8 <TIM1_TRG_COM_TIM11_IRQ_Handler>:
200216a8:	e7fe      	b.n	200216a8 <TIM1_TRG_COM_TIM11_IRQ_Handler>

200216aa <TIM1_CC_IRQ_Handler>:
200216aa:	e7fe      	b.n	200216aa <TIM1_CC_IRQ_Handler>

200216ac <TIM2_IRQ_Handler>:
200216ac:	e7fe      	b.n	200216ac <TIM2_IRQ_Handler>

200216ae <TIM3_IRQ_Handler>:
200216ae:	e7fe      	b.n	200216ae <TIM3_IRQ_Handler>

200216b0 <TIM4_IRQ_Handler>:
200216b0:	e7fe      	b.n	200216b0 <TIM4_IRQ_Handler>

200216b2 <I2C1_EV_IRQ_Handler>:
200216b2:	e7fe      	b.n	200216b2 <I2C1_EV_IRQ_Handler>

200216b4 <I2C1_ER_IRQ_Handler>:
200216b4:	e7fe      	b.n	200216b4 <I2C1_ER_IRQ_Handler>

200216b6 <I2C2_EV_IRQ_Handler>:
200216b6:	e7fe      	b.n	200216b6 <I2C2_EV_IRQ_Handler>

200216b8 <I2C2_ER_IRQ_Handler>:
200216b8:	e7fe      	b.n	200216b8 <I2C2_ER_IRQ_Handler>

200216ba <SPI1_IRQ_Handler>:
200216ba:	e7fe      	b.n	200216ba <SPI1_IRQ_Handler>

200216bc <SPI2_IRQ_Handler>:
200216bc:	e7fe      	b.n	200216bc <SPI2_IRQ_Handler>

200216be <USART1_IRQ_Handler>:
200216be:	e7fe      	b.n	200216be <USART1_IRQ_Handler>

200216c0 <USART2_IRQ_Handler>:
200216c0:	e7fe      	b.n	200216c0 <USART2_IRQ_Handler>

200216c2 <USART3_IRQ_Handler>:
200216c2:	e7fe      	b.n	200216c2 <USART3_IRQ_Handler>

200216c4 <EXTI15_10_IRQ_Handler>:
200216c4:	e7fe      	b.n	200216c4 <EXTI15_10_IRQ_Handler>

200216c6 <RTC_Alarm_IRQ_Handler>:
200216c6:	e7fe      	b.n	200216c6 <RTC_Alarm_IRQ_Handler>

200216c8 <OTG_FS_WKUP_IRQ_Handler>:
200216c8:	e7fe      	b.n	200216c8 <OTG_FS_WKUP_IRQ_Handler>

200216ca <TIM8_BRK_TIM12_IRQ_Handler>:
200216ca:	e7fe      	b.n	200216ca <TIM8_BRK_TIM12_IRQ_Handler>

200216cc <TIM8_UP_TIM13_IRQ_Handler>:
200216cc:	e7fe      	b.n	200216cc <TIM8_UP_TIM13_IRQ_Handler>

200216ce <TIM8_TRG_COM_TIM14_IRQ_Handler>:
200216ce:	e7fe      	b.n	200216ce <TIM8_TRG_COM_TIM14_IRQ_Handler>

200216d0 <TIM8_CC_IRQ_Handler>:
200216d0:	e7fe      	b.n	200216d0 <TIM8_CC_IRQ_Handler>

200216d2 <DMA1_Stream7_IRQ_Handler>:
200216d2:	e7fe      	b.n	200216d2 <DMA1_Stream7_IRQ_Handler>

200216d4 <FMC_IRQ_Handler>:
200216d4:	e7fe      	b.n	200216d4 <FMC_IRQ_Handler>

200216d6 <SDMMC1_IRQ_Handler>:
200216d6:	e7fe      	b.n	200216d6 <SDMMC1_IRQ_Handler>

200216d8 <TIM5_IRQ_Handler>:
200216d8:	e7fe      	b.n	200216d8 <TIM5_IRQ_Handler>

200216da <SPI3_IRQ_Handler>:
200216da:	e7fe      	b.n	200216da <SPI3_IRQ_Handler>

200216dc <UART4_IRQ_Handler>:
200216dc:	e7fe      	b.n	200216dc <UART4_IRQ_Handler>

200216de <UART5_IRQ_Handler>:
200216de:	e7fe      	b.n	200216de <UART5_IRQ_Handler>

200216e0 <TIM6_DAC_IRQ_Handler>:
200216e0:	e7fe      	b.n	200216e0 <TIM6_DAC_IRQ_Handler>

200216e2 <TIM7_IRQ_Handler>:
200216e2:	e7fe      	b.n	200216e2 <TIM7_IRQ_Handler>

200216e4 <DMA2_Stream0_IRQ_Handler>:
200216e4:	e7fe      	b.n	200216e4 <DMA2_Stream0_IRQ_Handler>

200216e6 <DMA2_Stream1_IRQ_Handler>:
200216e6:	e7fe      	b.n	200216e6 <DMA2_Stream1_IRQ_Handler>

200216e8 <DMA2_Stream2_IRQ_Handler>:
200216e8:	e7fe      	b.n	200216e8 <DMA2_Stream2_IRQ_Handler>

200216ea <DMA2_Stream3_IRQ_Handler>:
200216ea:	e7fe      	b.n	200216ea <DMA2_Stream3_IRQ_Handler>

200216ec <DMA2_Stream4_IRQ_Handler>:
200216ec:	e7fe      	b.n	200216ec <DMA2_Stream4_IRQ_Handler>

200216ee <ETH_IRQ_Handler>:
200216ee:	e7fe      	b.n	200216ee <ETH_IRQ_Handler>

200216f0 <ETH_WKUP_IRQ_Handler>:
200216f0:	e7fe      	b.n	200216f0 <ETH_WKUP_IRQ_Handler>

200216f2 <CAN2_TX_IRQ_Handler>:
200216f2:	e7fe      	b.n	200216f2 <CAN2_TX_IRQ_Handler>

200216f4 <CAN2_RX0_IRQ_Handler>:
200216f4:	e7fe      	b.n	200216f4 <CAN2_RX0_IRQ_Handler>

200216f6 <CAN2_RX1_IRQ_Handler>:
200216f6:	e7fe      	b.n	200216f6 <CAN2_RX1_IRQ_Handler>

200216f8 <CAN2_SCE_IRQ_Handler>:
200216f8:	e7fe      	b.n	200216f8 <CAN2_SCE_IRQ_Handler>

200216fa <OTG_FS_IRQ_Handler>:
200216fa:	e7fe      	b.n	200216fa <OTG_FS_IRQ_Handler>

200216fc <DMA2_Stream5_IRQ_Handler>:
200216fc:	e7fe      	b.n	200216fc <DMA2_Stream5_IRQ_Handler>

200216fe <DMA2_Stream6_IRQ_Handler>:
200216fe:	e7fe      	b.n	200216fe <DMA2_Stream6_IRQ_Handler>

20021700 <DMA2_Stream7_IRQ_Handler>:
20021700:	e7fe      	b.n	20021700 <DMA2_Stream7_IRQ_Handler>

20021702 <USART6_IRQ_Handler>:
20021702:	e7fe      	b.n	20021702 <USART6_IRQ_Handler>

20021704 <I2C3_EV_IRQ_Handler>:
20021704:	e7fe      	b.n	20021704 <I2C3_EV_IRQ_Handler>

20021706 <I2C3_ER_IRQ_Handler>:
20021706:	e7fe      	b.n	20021706 <I2C3_ER_IRQ_Handler>

20021708 <OTG_HS_EP1_OUT_IRQ_Handler>:
20021708:	e7fe      	b.n	20021708 <OTG_HS_EP1_OUT_IRQ_Handler>

2002170a <OTG_HS_EP1_IN_IRQ_Handler>:
2002170a:	e7fe      	b.n	2002170a <OTG_HS_EP1_IN_IRQ_Handler>

2002170c <OTG_HS_WKUP_IRQ_Handler>:
2002170c:	e7fe      	b.n	2002170c <OTG_HS_WKUP_IRQ_Handler>

2002170e <OTG_HS_IRQ_Handler>:
2002170e:	e7fe      	b.n	2002170e <OTG_HS_IRQ_Handler>

20021710 <DCMI_IRQ_Handler>:
20021710:	e7fe      	b.n	20021710 <DCMI_IRQ_Handler>

20021712 <RNG_IRQ_Handler>:
20021712:	e7fe      	b.n	20021712 <RNG_IRQ_Handler>

20021714 <FPU_IRQ_Handler>:
20021714:	e7fe      	b.n	20021714 <FPU_IRQ_Handler>

20021716 <UART7_IRQ_Handler>:
20021716:	e7fe      	b.n	20021716 <UART7_IRQ_Handler>

20021718 <UART8_IRQ_Handler>:
20021718:	e7fe      	b.n	20021718 <UART8_IRQ_Handler>

2002171a <SPI4_IRQ_Handler>:
2002171a:	e7fe      	b.n	2002171a <SPI4_IRQ_Handler>

2002171c <SPI5_IRQ_Handler>:
2002171c:	e7fe      	b.n	2002171c <SPI5_IRQ_Handler>

2002171e <SPI6_IRQ_Handler>:
2002171e:	e7fe      	b.n	2002171e <SPI6_IRQ_Handler>

20021720 <SAI1_IRQ_Handler>:
20021720:	e7fe      	b.n	20021720 <SAI1_IRQ_Handler>

20021722 <LTDC_IRQ_Handler>:
20021722:	e7fe      	b.n	20021722 <LTDC_IRQ_Handler>

20021724 <LTDC_ER_IRQ_Handler>:
20021724:	e7fe      	b.n	20021724 <LTDC_ER_IRQ_Handler>

20021726 <DMA2D_IRQ_Handler>:
20021726:	e7fe      	b.n	20021726 <DMA2D_IRQ_Handler>

20021728 <SAI2_IRQ_Handler>:
20021728:	e7fe      	b.n	20021728 <SAI2_IRQ_Handler>

2002172a <QUADSPI_IRQ_Handler>:
2002172a:	e7fe      	b.n	2002172a <QUADSPI_IRQ_Handler>

2002172c <LPTIM1_IRQ_Handler>:
2002172c:	e7fe      	b.n	2002172c <LPTIM1_IRQ_Handler>

2002172e <CEC_IRQ_Handler>:
2002172e:	e7fe      	b.n	2002172e <CEC_IRQ_Handler>

20021730 <I2C4_EV_IRQ_Handler>:
20021730:	e7fe      	b.n	20021730 <I2C4_EV_IRQ_Handler>

20021732 <I2C4_ER_IRQ_Handler>:
20021732:	e7fe      	b.n	20021732 <I2C4_ER_IRQ_Handler>

20021734 <SPDIF_RX_IRQ_Handler>:
20021734:	e7fe      	b.n	20021734 <SPDIF_RX_IRQ_Handler>

20021736 <DFSDM1_FLT0_IRQ_Handler>:
20021736:	e7fe      	b.n	20021736 <DFSDM1_FLT0_IRQ_Handler>

20021738 <DFSDM1_FLT1_IRQ_Handler>:
20021738:	e7fe      	b.n	20021738 <DFSDM1_FLT1_IRQ_Handler>

2002173a <DFSDM1_FLT2_IRQ_Handler>:
2002173a:	e7fe      	b.n	2002173a <DFSDM1_FLT2_IRQ_Handler>

2002173c <DFSDM1_FLT3_IRQ_Handler>:
2002173c:	e7fe      	b.n	2002173c <DFSDM1_FLT3_IRQ_Handler>

2002173e <SDMMC2_IRQ_Handler>:
2002173e:	e7fe      	b.n	2002173e <SDMMC2_IRQ_Handler>

20021740 <CAN3_TX_IRQ_Handler>:
20021740:	e7fe      	b.n	20021740 <CAN3_TX_IRQ_Handler>

20021742 <CAN3_RX0_IRQ_Handler>:
20021742:	e7fe      	b.n	20021742 <CAN3_RX0_IRQ_Handler>

20021744 <CAN3_RX1_IRQ_Handler>:
20021744:	e7fe      	b.n	20021744 <CAN3_RX1_IRQ_Handler>

20021746 <CAN3_SCE_IRQ_Handler>:
20021746:	e7fe      	b.n	20021746 <CAN3_SCE_IRQ_Handler>

20021748 <JPEG_IRQ_Handler>:
20021748:	e7fe      	b.n	20021748 <JPEG_IRQ_Handler>

2002174a <MDIOS_IRQ_Handler>:
2002174a:	e7fe      	b.n	2002174a <MDIOS_IRQ_Handler>

2002174c <init>:
2002174c:	b500      	push	{lr}
2002174e:	4a08      	ldr	r2, [pc, #32]	; (20021770 <init+0x24>)
20021750:	4b08      	ldr	r3, [pc, #32]	; (20021774 <init+0x28>)
20021752:	429a      	cmp	r2, r3
20021754:	d004      	beq.n	20021760 <init+0x14>
20021756:	2100      	movs	r1, #0
20021758:	f803 1b01 	strb.w	r1, [r3], #1
2002175c:	4293      	cmp	r3, r2
2002175e:	d1fb      	bne.n	20021758 <init+0xc>
20021760:	4a05      	ldr	r2, [pc, #20]	; (20021778 <init+0x2c>)
20021762:	4b06      	ldr	r3, [pc, #24]	; (2002177c <init+0x30>)
20021764:	609a      	str	r2, [r3, #8]
20021766:	f7ff ff71 	bl	2002164c <main>
2002176a:	f85d fb04 	ldr.w	pc, [sp], #4
2002176e:	bf00      	nop
20021770:	20021b60 	.word	0x20021b60
20021774:	20021798 	.word	0x20021798
20021778:	20020000 	.word	0x20020000
2002177c:	e000ed00 	.word	0xe000ed00

Disassembly of section .rodata:

20021780 <.rodata>:
20021780:	00000006 	.word	0x00000006
20021784:	00000002 	.word	0x00000002
20021788:	3e000000 	.word	0x3e000000
2002178c:	00000019 	.word	0x00000019
20021790:	3e000000 	.word	0x3e000000
20021794:	00000019 	.word	0x00000019

Disassembly of section .bss:

20021798 <guard variable for run::serial2_config>:
	...

200217a0 <run::serial2_config>:
200217a0:	00000000                                ....

200217a4 <guard variable for run::timer1_prescale>:
	...

200217ac <run::timer1_prescale>:
200217ac:	00000000                                ....

200217b0 <guard variable for run::gpio1_words_3>:
	...

200217b8 <run::gpio1_words_3>:
200217b8:	00000000                                ....

200217bc <elapsed_time>:
200217bc:	00000000                                ....

200217c0 <results>:
	...
